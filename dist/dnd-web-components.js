(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("dnd-web-components", [], factory);
	else if(typeof exports === 'object')
		exports["dnd-web-components"] = factory();
	else
		root["dnd-web-components"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../twitch/ecstatic/dist/bundle.js":
/*!*****************************************!*\
  !*** ../twitch/ecstatic/dist/bundle.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(n,Q){ true?module.exports=Q():undefined}(window,(function(){return function(n){var Q=window.webpackHotUpdateecstatic;window.webpackHotUpdateecstatic=function(n,B){!function(n,Q){if(!V[n]||!y[n])return;for(var B in y[n]=!1,Q)Object.prototype.hasOwnProperty.call(Q,B)&&(b[B]=Q[B]);0==--G&&0===u&&Z()}(n,B),Q&&Q(n,B)};var B,e=!0,t=\"df68e7387cafb32a7aae\",F={},i=[],I=[];function l(n){var Q=p[n];if(!Q)return m;var e=function(e){return Q.hot.active?(p[e]?-1===p[e].parents.indexOf(n)&&p[e].parents.push(n):(i=[n],B=e),-1===Q.children.indexOf(e)&&Q.children.push(e)):(console.warn(\"[HMR] unexpected require(\"+e+\") from disposed module \"+n),i=[]),m(e)},t=function(n){return{configurable:!0,enumerable:!0,get:function(){return m[n]},set:function(Q){m[n]=Q}}};for(var F in m)Object.prototype.hasOwnProperty.call(m,F)&&\"e\"!==F&&\"t\"!==F&&Object.defineProperty(e,F,t(F));return e.e=function(n){return\"ready\"===c&&g(\"prepare\"),u++,m.e(n).then(Q,(function(n){throw Q(),n}));function Q(){u--,\"prepare\"===c&&(a[n]||X(n),0===u&&0===G&&Z())}},e.t=function(n,Q){return 1&Q&&(n=e(n)),m.t(n,-2&Q)},e}function s(Q){var e={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:B!==Q,active:!0,accept:function(n,Q){if(void 0===n)e._selfAccepted=!0;else if(\"function\"==typeof n)e._selfAccepted=n;else if(\"object\"==typeof n)for(var B=0;B<n.length;B++)e._acceptedDependencies[n[B]]=Q||function(){};else e._acceptedDependencies[n]=Q||function(){}},decline:function(n){if(void 0===n)e._selfDeclined=!0;else if(\"object\"==typeof n)for(var Q=0;Q<n.length;Q++)e._declinedDependencies[n[Q]]=!0;else e._declinedDependencies[n]=!0},dispose:function(n){e._disposeHandlers.push(n)},addDisposeHandler:function(n){e._disposeHandlers.push(n)},removeDisposeHandler:function(n){var Q=e._disposeHandlers.indexOf(n);Q>=0&&e._disposeHandlers.splice(Q,1)},invalidate:function(){switch(this._selfInvalidated=!0,c){case\"idle\":(b={})[Q]=n[Q],g(\"ready\");break;case\"ready\":N(Q);break;case\"prepare\":case\"check\":case\"dispose\":case\"apply\":(C=C||[]).push(Q)}},check:r,apply:R,status:function(n){if(!n)return c;U.push(n)},addStatusHandler:function(n){U.push(n)},removeStatusHandler:function(n){var Q=U.indexOf(n);Q>=0&&U.splice(Q,1)},data:F[Q]};return B=void 0,e}var U=[],c=\"idle\";function g(n){c=n;for(var Q=0;Q<U.length;Q++)U[Q].call(null,n)}var d,b,o,C,G=0,u=0,a={},y={},V={};function x(n){return+n+\"\"===n?+n:n}function r(n){if(\"idle\"!==c)throw new Error(\"check() is only allowed in idle status\");return e=n,g(\"check\"),(Q=1e4,Q=Q||1e4,new Promise((function(n,B){if(\"undefined\"==typeof XMLHttpRequest)return B(new Error(\"No browser support\"));try{var e=new XMLHttpRequest,t=m.p+\"hot/hot-update.json\";e.open(\"GET\",t,!0),e.timeout=Q,e.send(null)}catch(n){return B(n)}e.onreadystatechange=function(){if(4===e.readyState)if(0===e.status)B(new Error(\"Manifest request to \"+t+\" timed out.\"));else if(404===e.status)n();else if(200!==e.status&&304!==e.status)B(new Error(\"Manifest request to \"+t+\" failed.\"));else{try{var Q=JSON.parse(e.responseText)}catch(n){return void B(n)}n(Q)}}}))).then((function(n){if(!n)return g(L()?\"ready\":\"idle\"),null;y={},a={},V=n.c,o=n.h,g(\"prepare\");var Q=new Promise((function(n,Q){d={resolve:n,reject:Q}}));b={};return X(0),\"prepare\"===c&&0===u&&0===G&&Z(),Q}));var Q}function X(n){var Q;V[n]?(y[n]=!0,G++,(Q=document.createElement(\"script\")).charset=\"utf-8\",Q.src=m.p+\"hot/hot-update.js\",document.head.appendChild(Q)):a[n]=!0}function Z(){g(\"ready\");var n=d;if(d=null,n)if(e)Promise.resolve().then((function(){return R(e)})).then((function(Q){n.resolve(Q)}),(function(Q){n.reject(Q)}));else{var Q=[];for(var B in b)Object.prototype.hasOwnProperty.call(b,B)&&Q.push(x(B));n.resolve(Q)}}function R(Q){if(\"ready\"!==c)throw new Error(\"apply() is only allowed in ready status\");return function Q(e){var I,l,s,U,c;function d(n){for(var Q=[n],B={},e=Q.map((function(n){return{chain:[n],id:n}}));e.length>0;){var t=e.pop(),F=t.id,i=t.chain;if((U=p[F])&&(!U.hot._selfAccepted||U.hot._selfInvalidated)){if(U.hot._selfDeclined)return{type:\"self-declined\",chain:i,moduleId:F};if(U.hot._main)return{type:\"unaccepted\",chain:i,moduleId:F};for(var I=0;I<U.parents.length;I++){var l=U.parents[I],s=p[l];if(s){if(s.hot._declinedDependencies[F])return{type:\"declined\",chain:i.concat([l]),moduleId:F,parentId:l};-1===Q.indexOf(l)&&(s.hot._acceptedDependencies[F]?(B[l]||(B[l]=[]),G(B[l],[F])):(delete B[l],Q.push(l),e.push({chain:i.concat([l]),id:l})))}}}}return{type:\"accepted\",moduleId:n,outdatedModules:Q,outdatedDependencies:B}}function G(n,Q){for(var B=0;B<Q.length;B++){var e=Q[B];-1===n.indexOf(e)&&n.push(e)}}L();var u={},a=[],y={},r=function(){console.warn(\"[HMR] unexpected require(\"+Z.moduleId+\") to disposed module\")};for(var X in b)if(Object.prototype.hasOwnProperty.call(b,X)){var Z;c=x(X),Z=b[X]?d(c):{type:\"disposed\",moduleId:X};var R=!1,N=!1,E=!1,A=\"\";switch(Z.chain&&(A=\"\\nUpdate propagation: \"+Z.chain.join(\" -> \")),Z.type){case\"self-declined\":e.onDeclined&&e.onDeclined(Z),e.ignoreDeclined||(R=new Error(\"Aborted because of self decline: \"+Z.moduleId+A));break;case\"declined\":e.onDeclined&&e.onDeclined(Z),e.ignoreDeclined||(R=new Error(\"Aborted because of declined dependency: \"+Z.moduleId+\" in \"+Z.parentId+A));break;case\"unaccepted\":e.onUnaccepted&&e.onUnaccepted(Z),e.ignoreUnaccepted||(R=new Error(\"Aborted because \"+c+\" is not accepted\"+A));break;case\"accepted\":e.onAccepted&&e.onAccepted(Z),N=!0;break;case\"disposed\":e.onDisposed&&e.onDisposed(Z),E=!0;break;default:throw new Error(\"Unexception type \"+Z.type)}if(R)return g(\"abort\"),Promise.reject(R);if(N)for(c in y[c]=b[c],G(a,Z.outdatedModules),Z.outdatedDependencies)Object.prototype.hasOwnProperty.call(Z.outdatedDependencies,c)&&(u[c]||(u[c]=[]),G(u[c],Z.outdatedDependencies[c]));E&&(G(a,[Z.moduleId]),y[c]=r)}var W,h=[];for(l=0;l<a.length;l++)c=a[l],p[c]&&p[c].hot._selfAccepted&&y[c]!==r&&!p[c].hot._selfInvalidated&&h.push({module:c,parents:p[c].parents.slice(),errorHandler:p[c].hot._selfAccepted});g(\"dispose\"),Object.keys(V).forEach((function(n){!1===V[n]&&function(n){delete installedChunks[n]}(n)}));var S,v,D=a.slice();for(;D.length>0;)if(c=D.pop(),U=p[c]){var H={},Y=U.hot._disposeHandlers;for(s=0;s<Y.length;s++)(I=Y[s])(H);for(F[c]=H,U.hot.active=!1,delete p[c],delete u[c],s=0;s<U.children.length;s++){var z=p[U.children[s]];z&&((W=z.parents.indexOf(c))>=0&&z.parents.splice(W,1))}}for(c in u)if(Object.prototype.hasOwnProperty.call(u,c)&&(U=p[c]))for(v=u[c],s=0;s<v.length;s++)S=v[s],(W=U.children.indexOf(S))>=0&&U.children.splice(W,1);g(\"apply\"),void 0!==o&&(t=o,o=void 0);for(c in b=void 0,y)Object.prototype.hasOwnProperty.call(y,c)&&(n[c]=y[c]);var f=null;for(c in u)if(Object.prototype.hasOwnProperty.call(u,c)&&(U=p[c])){v=u[c];var T=[];for(l=0;l<v.length;l++)if(S=v[l],I=U.hot._acceptedDependencies[S]){if(-1!==T.indexOf(I))continue;T.push(I)}for(l=0;l<T.length;l++){I=T[l];try{I(v)}catch(n){e.onErrored&&e.onErrored({type:\"accept-errored\",moduleId:c,dependencyId:v[l],error:n}),e.ignoreErrored||f||(f=n)}}}for(l=0;l<h.length;l++){var M=h[l];c=M.module,i=M.parents,B=c;try{m(c)}catch(n){if(\"function\"==typeof M.errorHandler)try{M.errorHandler(n)}catch(Q){e.onErrored&&e.onErrored({type:\"self-accept-error-handler-errored\",moduleId:c,error:Q,originalError:n}),e.ignoreErrored||f||(f=Q),f||(f=n)}else e.onErrored&&e.onErrored({type:\"self-accept-errored\",moduleId:c,error:n}),e.ignoreErrored||f||(f=n)}}if(f)return g(\"fail\"),Promise.reject(f);if(C)return Q(e).then((function(n){return a.forEach((function(Q){n.indexOf(Q)<0&&n.push(Q)})),n}));return g(\"idle\"),new Promise((function(n){n(a)}))}(Q=Q||{})}function L(){if(C)return b||(b={}),C.forEach(N),C=void 0,!0}function N(Q){Object.prototype.hasOwnProperty.call(b,Q)||(b[Q]=n[Q])}var p={};function m(Q){if(p[Q])return p[Q].exports;var B=p[Q]={i:Q,l:!1,exports:{},hot:s(Q),parents:(I=i,i=[],I),children:[]};return n[Q].call(B.exports,B,B.exports,l(Q)),B.l=!0,B.exports}return m.m=n,m.c=p,m.d=function(n,Q,B){m.o(n,Q)||Object.defineProperty(n,Q,{enumerable:!0,get:B})},m.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},m.t=function(n,Q){if(1&Q&&(n=m(n)),8&Q)return n;if(4&Q&&\"object\"==typeof n&&n&&n.__esModule)return n;var B=Object.create(null);if(m.r(B),Object.defineProperty(B,\"default\",{enumerable:!0,value:n}),2&Q&&\"string\"!=typeof n)for(var e in n)m.d(B,e,function(Q){return n[Q]}.bind(null,e));return B},m.n=function(n){var Q=n&&n.__esModule?function(){return n.default}:function(){return n};return m.d(Q,\"a\",Q),Q},m.o=function(n,Q){return Object.prototype.hasOwnProperty.call(n,Q)},m.p=\"/static/\",m.h=function(){return t},l(0)(m.s=0)}([function(n,Q,B){n.exports=B(1)},function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('// ESM COMPAT FLAG\\n__webpack_require__.r(__webpack_exports__);\\n\\n// EXPORTS\\n__webpack_require__.d(__webpack_exports__, \"World\", function() { return /* reexport */ World_World; });\\n__webpack_require__.d(__webpack_exports__, \"createEntity\", function() { return /* reexport */ createEntity; });\\n__webpack_require__.d(__webpack_exports__, \"createSystem\", function() { return /* reexport */ createSystem; });\\n\\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/rng.js\\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\\n// require the crypto API and do not support built-in fallback to lower quality random number\\n// generators (like Math.random()).\\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\\n// find the complete implementation of crypto (msCrypto) on IE11.\\nvar getRandomValues = typeof crypto !== \\'undefined\\' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== \\'undefined\\' && typeof msCrypto.getRandomValues === \\'function\\' && msCrypto.getRandomValues.bind(msCrypto);\\nvar rnds8 = new Uint8Array(16);\\nfunction rng() {\\n  if (!getRandomValues) {\\n    throw new Error(\\'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\\');\\n  }\\n\\n  return getRandomValues(rnds8);\\n}\\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/regex.js\\n/* harmony default export */ var regex = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/validate.js\\n\\n\\nfunction validate(uuid) {\\n  return typeof uuid === \\'string\\' && regex.test(uuid);\\n}\\n\\n/* harmony default export */ var esm_browser_validate = (validate);\\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/stringify.js\\n\\n/**\\n * Convert array of 16 byte values to UUID string format of the form:\\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\\n */\\n\\nvar byteToHex = [];\\n\\nfor (var stringify_i = 0; stringify_i < 256; ++stringify_i) {\\n  byteToHex.push((stringify_i + 0x100).toString(16).substr(1));\\n}\\n\\nfunction stringify(arr) {\\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\\n  // Note: Be careful editing this code!  It\\'s been tuned for performance\\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \\'-\\' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \\'-\\' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \\'-\\' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \\'-\\' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it\\'s likely due to one\\n  // of the following:\\n  // - One or more input array values don\\'t map to a hex octet (leading to\\n  // \"undefined\" in the uuid)\\n  // - Invalid input values for the RFC `version` or `variant` fields\\n\\n  if (!esm_browser_validate(uuid)) {\\n    throw TypeError(\\'Stringified UUID is invalid\\');\\n  }\\n\\n  return uuid;\\n}\\n\\n/* harmony default export */ var esm_browser_stringify = (stringify);\\n// CONCATENATED MODULE: ./node_modules/uuid/dist/esm-browser/v4.js\\n\\n\\n\\nfunction v4(options, buf, offset) {\\n  options = options || {};\\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\\n\\n  rnds[6] = rnds[6] & 0x0f | 0x40;\\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\\n\\n  if (buf) {\\n    offset = offset || 0;\\n\\n    for (var i = 0; i < 16; ++i) {\\n      buf[offset + i] = rnds[i];\\n    }\\n\\n    return buf;\\n  }\\n\\n  return esm_browser_stringify(rnds);\\n}\\n\\n/* harmony default export */ var esm_browser_v4 = (v4);\\n// CONCATENATED MODULE: ./src/guards.ts\\n// export function classIsCompType(cl: any)\\nfunction isComponentInstance(Class, comp) {\\n  if (!comp) {\\n    return false;\\n  }\\n\\n  if (!(comp instanceof Class)) {\\n    return false;\\n  }\\n\\n  return true;\\n}\\nfunction isComponentName(possibleName, entitiesByCTypes) {\\n  // string\\n  if (typeof possibleName !== \\'string\\') {\\n    return false;\\n  }\\n\\n  for (const a of entitiesByCTypes.keys()) {\\n    if (a.includes(possibleName)) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n// CONCATENATED MODULE: ./src/ComponentCollection.ts\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\n\\n// CT is a Union, like `type = typeof FirstComponent | typeof SecondComponent`.\\nclass ComponentCollection_ComponentCollection {\\n  constructor() {\\n    _defineProperty(this, \"components\", new Map());\\n\\n    _defineProperty(this, \"add\", component => {\\n      this.components.set(component.constructor.name, component);\\n    });\\n\\n    _defineProperty(this, \"update\", (cl, func) => {\\n      const c = this.components.get(cl.name);\\n\\n      if (isComponentInstance(cl, c)) {\\n        const updatedComponent = func(c);\\n        this.components.set(cl.name, updatedComponent);\\n      }\\n    });\\n\\n    _defineProperty(this, \"remove\", cType => {\\n      this.components.delete(cType.name);\\n    });\\n\\n    _defineProperty(this, \"get\", cl => {\\n      const comp = this.components.get(cl.name);\\n\\n      if (isComponentInstance(cl, comp)) {\\n        return comp;\\n      } else {\\n        throw new Error(`ComponentCollection does not have component of type ${cl.name}`);\\n      }\\n    });\\n\\n    _defineProperty(this, \"has\", cType => {\\n      return Array.isArray(cType) ? cType.every(ct => this.components.has(ct.name) === true) : this.components.has(cType.name);\\n    });\\n\\n    _defineProperty(this, \"hasByName\", cName => {\\n      return Array.isArray(cName) ? cName.every(ct => this.components.has(ct) === true) : this.components.has(cName);\\n    });\\n  }\\n\\n  /**\\n   * Get the component type names that are currently being used in the collection.\\n   */\\n  get componentTypes() {\\n    return [...this.components.keys()];\\n  }\\n  /**\\n   * Get the current number of components that are in the collection.\\n   */\\n\\n\\n  get size() {\\n    return this.components.size;\\n  }\\n\\n}\\n// CONCATENATED MODULE: ./src/Entity.ts\\nfunction Entity_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\n\\n\\nclass Entity_Entity {\\n  constructor(world) {\\n    Entity_defineProperty(this, \"_id\", void 0);\\n\\n    Entity_defineProperty(this, \"_world\", void 0);\\n\\n    this._id = esm_browser_v4();\\n    this._world = world;\\n    /*\\n    Registering with the World.\\n    */\\n\\n    this._world.registerEntity(this);\\n  }\\n  /**\\n   * Add a component to an Entity, doh.\\n   */\\n\\n\\n  add(component) {\\n    this._world.set(this._id, component);\\n\\n    return this;\\n  }\\n  /**\\n   * Add a tag to a component\\n   */\\n\\n\\n  addTag(tag) {\\n    const entitySet = this._world.entitiesByTags.has(tag) ? this._world.entitiesByTags.get(tag) : new Set();\\n\\n    if (entitySet) {\\n      entitySet.add(this._id);\\n\\n      this._world.entitiesByTags.set(tag, entitySet);\\n    }\\n\\n    return this;\\n  }\\n  /**\\n   * Determines if an entity has a component related to it.\\n   */\\n\\n\\n  has(cType) {\\n    const cc = this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\\n    return cc.has(cType);\\n  }\\n  /**\\n   * Check to see if an entity tagged with a given tag.\\n   */\\n\\n\\n  hasTag(tag) {\\n    if (this._world.entitiesByTags.has(tag)) {\\n      const entitySet = this._world.entitiesByTags.get(tag);\\n\\n      if (entitySet) {\\n        return entitySet.has(this._id);\\n      }\\n    }\\n\\n    return false;\\n  }\\n  /**\\n   * Get a component that belongs to an entity.\\n   */\\n\\n\\n  get(cType) {\\n    const cc = this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\\n    const component = cc.get(cType);\\n    return component;\\n  }\\n  /**\\n   * Get all components that have been added to an entity, via a ComponentCollection\\n   */\\n\\n\\n  getAll() {\\n    return this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\\n  }\\n  /**\\n   * Remove a component from an entity.\\n   * @param cType A component class, eg MyComponent\\n   */\\n\\n\\n  remove(cType) {\\n    this._world.remove(this._id, cType);\\n\\n    return this;\\n  }\\n  /**\\n   * Remove a tag from an entity\\n   */\\n\\n\\n  removeTag(tag) {\\n    if (this._world.entitiesByTags.has(tag)) {\\n      const entitySet = this._world.entitiesByTags.get(tag);\\n\\n      if (entitySet) {\\n        entitySet.delete(this._id);\\n\\n        if (entitySet.size === 0) {\\n          this._world.entitiesByTags.delete(tag);\\n        }\\n      }\\n    }\\n\\n    return this;\\n  }\\n  /** Clears all components from an Entity */\\n\\n\\n  clear() {\\n    this._world.clearEntityComponents(this._id);\\n\\n    return this;\\n  }\\n  /**\\n   * Remove all tags on an entity\\n   */\\n\\n\\n  clearTags() {\\n    for (const [tag, entitySet] of this._world.entitiesByTags.entries()) {\\n      entitySet.delete(this._id);\\n\\n      if (entitySet.size === 0) {\\n        this._world.entitiesByTags.delete(tag);\\n      }\\n    }\\n\\n    return this;\\n  }\\n\\n  destroy() {\\n    this._world.destroyEntity(this._id);\\n  }\\n\\n  get id() {\\n    return this._id;\\n  }\\n\\n  get world() {\\n    return this._world;\\n  }\\n  /**\\n   * Get all components that have been added to an entity, via a ComponentCollection.\\n   * Does the same thing as entityInstance.getAll().\\n   */\\n\\n\\n  get components() {\\n    return this._world.componentCollections.get(this._id) || new ComponentCollection_ComponentCollection();\\n  }\\n  /**\\n   * Retrieves all the tags that have been added to this entity.\\n   */\\n\\n\\n  get tags() {\\n    const tags = new Set();\\n\\n    for (const [tag, entitySet] of this._world.entitiesByTags.entries()) {\\n      if (entitySet.has(this._id)) {\\n        tags.add(tag);\\n      }\\n    }\\n\\n    return tags;\\n  }\\n\\n}\\nfunction createEntity(world) {\\n  const entity = new Entity_Entity(world);\\n  return entity;\\n}\\n// CONCATENATED MODULE: ./src/System.ts\\n\\n\\n\\n/**\\n * This is how you create a System.\\n * @example\\n * ```\\n * createSystem(world, [\\'ComponentType\\'], ({ entity }) => \\'Do fun system things here.\\')\\n * ```\\n */\\nfunction createSystem( // export function createSystem<CT extends CompTypes<CT>>(\\nworld, // cTypes: CT[],\\ncTypes, systemFunc) {\\n  const cNames = cTypes.map(ct => ct.name);\\n  world.registerSystem(cNames); // world.registerSystem(cTypes);\\n\\n  return () => {\\n    let index = 0;\\n    const size = world.entitiesByCTypes.size; // Used for matching the array of ComponentTypes which is the key\\n    // of where the ComponentCollection is, with the array of ComponentTypes\\n    // that are passes.\\n    // Might be nice in the future to go back to a ref check on cTypes, but\\n    // for now this doesn\\'t seem to be that much of a perf hit.\\n    // for (const ct of world.entitiesByCTypes.keys()) {\\n    //   if (cTypes.length === ct.length && cTypes.every(c => ct.includes(c))) {\\n    //     for (const eid of world.entitiesByCTypes.get(cTypes)) {\\n    //       const args: SystemFuncArgs<CT> = {\\n    //         entity: world.entities.get(eid),\\n    //         components: world.componentCollections.get(eid),\\n    //         world,\\n    //         index,\\n    //         size,\\n    //         isFirst: index === 0,\\n    //         isLast: index + 1 === size,\\n    //       }\\n    //       systemFunc(args);\\n    //       index += 1;\\n    //     }\\n    //   }\\n    // }\\n\\n    const cTypeArrs = world.entitiesByCTypes.get(cNames) || new Set();\\n\\n    for (const eid of cTypeArrs) {\\n      const args = {\\n        entity: world.entities.get(eid) || new Entity_Entity(world),\\n        components: world.componentCollections.get(eid) || new ComponentCollection_ComponentCollection(),\\n        world,\\n        index,\\n        size,\\n        isFirst: index === 0,\\n        isLast: index + 1 === size\\n      };\\n      systemFunc(args);\\n      index += 1;\\n    }\\n  };\\n}\\n// CONCATENATED MODULE: ./src/World.ts\\nfunction World_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\n\\n\\n\\nclass World_World {\\n  constructor() {\\n    World_defineProperty(this, \"componentCollections\", new Map());\\n\\n    World_defineProperty(this, \"entities\", new Map());\\n\\n    World_defineProperty(this, \"entitiesByCTypes\", new Map());\\n\\n    World_defineProperty(this, \"entitiesByTags\", new Map());\\n\\n    World_defineProperty(this, \"find\", predicate => {\\n      for (const entity of this.entities.values()) {\\n        if (predicate(entity)) {\\n          return entity;\\n        }\\n      }\\n\\n      return null;\\n    });\\n\\n    World_defineProperty(this, \"findAll\", predicate => {\\n      const results = [];\\n\\n      for (const entity of this.entities.values()) {\\n        if (predicate(entity)) {\\n          results.push(entity);\\n        }\\n      }\\n\\n      return results;\\n    });\\n\\n    World_defineProperty(this, \"locate\", cl => {\\n      for (const entity of this.entities.values()) {\\n        // console.log(\"entity?\", entity.components, cl.name);\\n        if (entity.components.has(cl)) {\\n          return entity;\\n        }\\n      }\\n\\n      return null;\\n    });\\n\\n    World_defineProperty(this, \"locateAll\", cl => {\\n      const results = [];\\n\\n      for (const entity of this.entities.values()) {\\n        if (entity.components.has(cl)) {\\n          results.push(entity);\\n        }\\n      }\\n\\n      return results;\\n    });\\n\\n    World_defineProperty(this, \"grab\", cl => {\\n      // const entity = this.locate((cl as unknown) as CT[keyof CT]);\\n      const entity = this.locate(cl);\\n\\n      if (entity) {\\n        const cc = this.componentCollections.get(entity.id) || new ComponentCollection_ComponentCollection();\\n        const component = cc.get(cl);\\n        return {\\n          entity,\\n          component\\n        };\\n      }\\n\\n      return null;\\n    });\\n\\n    World_defineProperty(this, \"grabBy\", (cl, predicate) => {\\n      const entities = this.locateAll(cl);\\n\\n      for (const entity of entities) {\\n        const cc = this.componentCollections.get(entity.id) || new ComponentCollection_ComponentCollection();\\n        const component = cc.get(cl);\\n\\n        if (predicate(component)) {\\n          return {\\n            component,\\n            entity\\n          };\\n        }\\n      }\\n\\n      return null;\\n    });\\n\\n    World_defineProperty(this, \"grabAll\", cl => {\\n      const entities = this.locateAll(cl);\\n      return entities.map(entity => {\\n        return {\\n          entity,\\n          component: entity.components.get(cl)\\n        };\\n      });\\n    });\\n\\n    World_defineProperty(this, \"get\", (eid, cl) => {\\n      const cc = this.componentCollections.get(eid) || new ComponentCollection_ComponentCollection();\\n      return cc.get(cl);\\n    });\\n\\n    World_defineProperty(this, \"getTagged\", tag => {\\n      const tagEntityIds = this.entitiesByTags.get(tag);\\n\\n      if (tagEntityIds) {\\n        const entityId = tagEntityIds.values().next().value;\\n        const entity = this.entities.get(entityId);\\n\\n        if (entity) {\\n          return entity;\\n        }\\n      }\\n\\n      return null;\\n    });\\n\\n    World_defineProperty(this, \"getAllTagged\", tag => {\\n      let entities = []; // eslint-disable-line\\n\\n      const tagEntityIds = this.entitiesByTags.get(tag);\\n\\n      if (tagEntityIds) {\\n        for (const entityId of tagEntityIds) {\\n          const entity = this.entities.get(entityId);\\n\\n          if (entity) {\\n            entities.push(entity);\\n          }\\n        }\\n      }\\n\\n      return entities;\\n    });\\n\\n    World_defineProperty(this, \"set\", (eid, component) => {\\n      const cc = this.componentCollections.get(eid) || new ComponentCollection_ComponentCollection();\\n      cc.add(component);\\n      this.componentCollections.set(eid, cc);\\n\\n      for (const [ctArr, entitySet] of this.entitiesByCTypes) {\\n        if (ctArr.every(cc.hasByName)) {\\n          entitySet.add(eid);\\n        }\\n      }\\n\\n      return this;\\n    });\\n\\n    World_defineProperty(this, \"remove\", (eid, cType) => {\\n      const cc = this.componentCollections.get(eid) || new ComponentCollection_ComponentCollection(); // remove entity from current entitiesByCTypes\\n\\n      for (const [ctArr, entitySet] of this.entitiesByCTypes) {\\n        if (ctArr.every(cc.hasByName)) {\\n          entitySet.delete(eid);\\n        }\\n      }\\n\\n      cc.remove(cType); // Move entityId to new CTypes if needed.\\n\\n      for (const [ctArr, entitySet] of this.entitiesByCTypes) {\\n        if (ctArr.every(cc.hasByName)) {\\n          entitySet.add(eid);\\n        }\\n      }\\n\\n      return this;\\n    });\\n  }\\n\\n  /**\\n   * Internal method used in setting up a new system.\\n   */\\n  registerSystem(cNames) {\\n    this.entitiesByCTypes.set(cNames, new Set());\\n    return this;\\n  }\\n  /**\\n   * an alias for createSystem().\\n   */\\n\\n\\n  createSystem(cl, systemFunc) {\\n    const system = createSystem(this, cl, systemFunc);\\n    return system;\\n  }\\n\\n  registerEntity(entity) {\\n    const cc = new ComponentCollection_ComponentCollection();\\n    this.componentCollections.set(entity.id, cc);\\n    this.entities.set(entity.id, entity);\\n    return this;\\n  }\\n  /**\\n   * Remove all components that belong to an entity.\\n   */\\n\\n\\n  clearEntityComponents(eid) {\\n    this.componentCollections.set(eid, new ComponentCollection_ComponentCollection());\\n\\n    for (const entitySet of this.entitiesByCTypes.values()) {\\n      if (entitySet.has(eid)) {\\n        entitySet.delete(eid);\\n      }\\n    }\\n\\n    return this;\\n  }\\n  /**\\n   * Create an entity that is in the world.\\n   * Basically just new Entity(world), but saves an import of Entity.\\n   */\\n\\n\\n  createEntity() {\\n    const entity = new Entity_Entity(this);\\n    return entity;\\n  }\\n  /**\\n   * Destroys an entity.\\n   * Same as entity.destroy().\\n   */\\n\\n\\n  destroyEntity(eid) {\\n    this.componentCollections.delete(eid);\\n    this.entities.delete(eid);\\n\\n    for (const entitySet of this.entitiesByCTypes.values()) {\\n      if (entitySet.has(eid)) {\\n        entitySet.delete(eid);\\n      }\\n    } // remove any tag associations with destroyed entities.\\n\\n\\n    for (const [tag, entitySet] of this.entitiesByTags) {\\n      if (entitySet.has(eid)) {\\n        entitySet.delete(eid);\\n      }\\n\\n      if (entitySet.size === 0) {\\n        this.entitiesByTags.delete(tag);\\n      }\\n    }\\n\\n    return this;\\n  }\\n\\n}\\n// CONCATENATED MODULE: ./src/index.ts\\n\\n\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///1\\n')}])}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../twitch/ecstatic/dist/bundle.js\n");

/***/ }),

/***/ "./node_modules/lodash/noop.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/noop.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvbG9kYXNoL25vb3AuanM/YmNkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9kYXNoL25vb3AuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYHVuZGVmaW5lZGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAyLjMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEBleGFtcGxlXG4gKlxuICogXy50aW1lcygyLCBfLm5vb3ApO1xuICogLy8gPT4gW3VuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICovXG5mdW5jdGlvbiBub29wKCkge1xuICAvLyBObyBvcGVyYXRpb24gcGVyZm9ybWVkLlxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5vb3A7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/lodash/noop.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************/
/*! exports provided: v1, v3, v4, v5, NIL, version, validate, stringify, parse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"./node_modules/uuid/dist/esm-browser/v1.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"v1\", function() { return _v1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"./node_modules/uuid/dist/esm-browser/v3.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"v3\", function() { return _v3_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"v4\", function() { return _v4_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"./node_modules/uuid/dist/esm-browser/v5.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"v5\", function() { return _v5_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"./node_modules/uuid/dist/esm-browser/nil.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NIL\", function() { return _nil_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"./node_modules/uuid/dist/esm-browser/version.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return _version_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"validate\", function() { return _validate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stringify\", function() { return _stringify_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parse\", function() { return _parse_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL2luZGV4LmpzP2UxNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBd0M7QUFDQTtBQUNBO0FBQ0E7QUFDRTtBQUNRO0FBQ0U7QUFDRSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIHYxIH0gZnJvbSAnLi92MS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHYzIH0gZnJvbSAnLi92My5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHY0IH0gZnJvbSAnLi92NC5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHY1IH0gZnJvbSAnLi92NS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE5JTCB9IGZyb20gJy4vbmlsLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbi5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHZhbGlkYXRlIH0gZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcGFyc2UgfSBmcm9tICcuL3BhcnNlLmpzJzsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (md5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/md5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/nil.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/nil.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ('00000000-0000-0000-0000-000000000000');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL25pbC5qcz9kNGNmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUscUdBQXNDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9uaWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAnMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwJzsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/nil.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/parse.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction parse(uuid) {\n  if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (parse);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3BhcnNlLmpzPzBkZWEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFxQzs7QUFFckM7QUFDQSxPQUFPLDREQUFRO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBLCtCQUErQjs7QUFFL0I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9COztBQUVwQjtBQUNBLG9CQUFvQjs7QUFFcEI7QUFDQSxvQkFBb0I7O0FBRXBCO0FBQ0Esb0JBQW9CO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWUsb0VBQUsiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3BhcnNlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuXG5mdW5jdGlvbiBwYXJzZSh1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgdmFyIHY7XG4gIHZhciBhcnIgPSBuZXcgVWludDhBcnJheSgxNik7IC8vIFBhcnNlICMjIyMjIyMjLS4uLi4tLi4uLi0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFyclswXSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgwLCA4KSwgMTYpKSA+Pj4gMjQ7XG4gIGFyclsxXSA9IHYgPj4+IDE2ICYgMHhmZjtcbiAgYXJyWzJdID0gdiA+Pj4gOCAmIDB4ZmY7XG4gIGFyclszXSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0jIyMjLS4uLi4tLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbNF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoOSwgMTMpLCAxNikpID4+PiA4O1xuICBhcnJbNV0gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0jIyMjLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzZdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDE0LCAxOCksIDE2KSkgPj4+IDg7XG4gIGFycls3XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLS4uLi4tIyMjIy0uLi4uLi4uLi4uLi5cblxuICBhcnJbOF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTksIDIzKSwgMTYpKSA+Pj4gODtcbiAgYXJyWzldID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tLi4uLi0uLi4uLSMjIyMjIyMjIyMjI1xuICAvLyAoVXNlIFwiL1wiIHRvIGF2b2lkIDMyLWJpdCB0cnVuY2F0aW9uIHdoZW4gYml0LXNoaWZ0aW5nIGhpZ2gtb3JkZXIgYnl0ZXMpXG5cbiAgYXJyWzEwXSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgyNCwgMzYpLCAxNikpIC8gMHgxMDAwMDAwMDAwMCAmIDB4ZmY7XG4gIGFyclsxMV0gPSB2IC8gMHgxMDAwMDAwMDAgJiAweGZmO1xuICBhcnJbMTJdID0gdiA+Pj4gMjQgJiAweGZmO1xuICBhcnJbMTNdID0gdiA+Pj4gMTYgJiAweGZmO1xuICBhcnJbMTRdID0gdiA+Pj4gOCAmIDB4ZmY7XG4gIGFyclsxNV0gPSB2ICYgMHhmZjtcbiAgcmV0dXJuIGFycjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcGFyc2U7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/parse.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JlZ2V4LmpzPzQwZDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSw2RUFBYyxFQUFFLFVBQVUsRUFBRSxlQUFlLEVBQUUsZ0JBQWdCLEVBQUUsVUFBVSxHQUFHLHlDQUF5QyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcmVnZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/regex.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return rng; });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcz9kOGY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuIEluIHRoZSBicm93c2VyIHdlIHRoZXJlZm9yZVxuLy8gcmVxdWlyZSB0aGUgY3J5cHRvIEFQSSBhbmQgZG8gbm90IHN1cHBvcnQgYnVpbHQtaW4gZmFsbGJhY2sgdG8gbG93ZXIgcXVhbGl0eSByYW5kb20gbnVtYmVyXG4vLyBnZW5lcmF0b3JzIChsaWtlIE1hdGgucmFuZG9tKCkpLlxuLy8gZ2V0UmFuZG9tVmFsdWVzIG5lZWRzIHRvIGJlIGludm9rZWQgaW4gYSBjb250ZXh0IHdoZXJlIFwidGhpc1wiIGlzIGEgQ3J5cHRvIGltcGxlbWVudGF0aW9uLiBBbHNvLFxuLy8gZmluZCB0aGUgY29tcGxldGUgaW1wbGVtZW50YXRpb24gb2YgY3J5cHRvIChtc0NyeXB0bykgb24gSUUxMS5cbnZhciBnZXRSYW5kb21WYWx1ZXMgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pIHx8IHR5cGVvZiBtc0NyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIG1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcyA9PT0gJ2Z1bmN0aW9uJyAmJiBtc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChtc0NyeXB0byk7XG52YXIgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKCkgbm90IHN1cHBvcnRlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCNnZXRyYW5kb212YWx1ZXMtbm90LXN1cHBvcnRlZCcpO1xuICB9XG5cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/rng.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (sha1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3NoYTEuanM/Yjc1ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtEQUFrRDs7QUFFbEQ7O0FBRUEsbUJBQW1CLGdCQUFnQjtBQUNuQztBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsUUFBUTtBQUMxQjs7QUFFQSxtQkFBbUIsUUFBUTtBQUMzQjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixTQUFTO0FBQzVCOztBQUVBLG1CQUFtQixRQUFRO0FBQzNCO0FBQ0E7O0FBRUEscUJBQXFCLFNBQVM7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFCQUFxQixVQUFVO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRWUsbUVBQUkiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3NoYTEuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBZGFwdGVkIGZyb20gQ2hyaXMgVmVuZXNzJyBTSEExIGNvZGUgYXRcbi8vIGh0dHA6Ly93d3cubW92YWJsZS10eXBlLmNvLnVrL3NjcmlwdHMvc2hhMS5odG1sXG5mdW5jdGlvbiBmKHMsIHgsIHksIHopIHtcbiAgc3dpdGNoIChzKSB7XG4gICAgY2FzZSAwOlxuICAgICAgcmV0dXJuIHggJiB5IF4gfnggJiB6O1xuXG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuIHggXiB5IF4gejtcblxuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiB4ICYgeSBeIHggJiB6IF4geSAmIHo7XG5cbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4geCBeIHkgXiB6O1xuICB9XG59XG5cbmZ1bmN0aW9uIFJPVEwoeCwgbikge1xuICByZXR1cm4geCA8PCBuIHwgeCA+Pj4gMzIgLSBuO1xufVxuXG5mdW5jdGlvbiBzaGExKGJ5dGVzKSB7XG4gIHZhciBLID0gWzB4NWE4Mjc5OTksIDB4NmVkOWViYTEsIDB4OGYxYmJjZGMsIDB4Y2E2MmMxZDZdO1xuICB2YXIgSCA9IFsweDY3NDUyMzAxLCAweGVmY2RhYjg5LCAweDk4YmFkY2ZlLCAweDEwMzI1NDc2LCAweGMzZDJlMWYwXTtcblxuICBpZiAodHlwZW9mIGJ5dGVzID09PSAnc3RyaW5nJykge1xuICAgIHZhciBtc2cgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYnl0ZXMpKTsgLy8gVVRGOCBlc2NhcGVcblxuICAgIGJ5dGVzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7ICsraSkge1xuICAgICAgYnl0ZXMucHVzaChtc2cuY2hhckNvZGVBdChpKSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KGJ5dGVzKSkge1xuICAgIC8vIENvbnZlcnQgQXJyYXktbGlrZSB0byBBcnJheVxuICAgIGJ5dGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYnl0ZXMpO1xuICB9XG5cbiAgYnl0ZXMucHVzaCgweDgwKTtcbiAgdmFyIGwgPSBieXRlcy5sZW5ndGggLyA0ICsgMjtcbiAgdmFyIE4gPSBNYXRoLmNlaWwobCAvIDE2KTtcbiAgdmFyIE0gPSBuZXcgQXJyYXkoTik7XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IE47ICsrX2kpIHtcbiAgICB2YXIgYXJyID0gbmV3IFVpbnQzMkFycmF5KDE2KTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgMTY7ICsraikge1xuICAgICAgYXJyW2pdID0gYnl0ZXNbX2kgKiA2NCArIGogKiA0XSA8PCAyNCB8IGJ5dGVzW19pICogNjQgKyBqICogNCArIDFdIDw8IDE2IHwgYnl0ZXNbX2kgKiA2NCArIGogKiA0ICsgMl0gPDwgOCB8IGJ5dGVzW19pICogNjQgKyBqICogNCArIDNdO1xuICAgIH1cblxuICAgIE1bX2ldID0gYXJyO1xuICB9XG5cbiAgTVtOIC0gMV1bMTRdID0gKGJ5dGVzLmxlbmd0aCAtIDEpICogOCAvIE1hdGgucG93KDIsIDMyKTtcbiAgTVtOIC0gMV1bMTRdID0gTWF0aC5mbG9vcihNW04gLSAxXVsxNF0pO1xuICBNW04gLSAxXVsxNV0gPSAoYnl0ZXMubGVuZ3RoIC0gMSkgKiA4ICYgMHhmZmZmZmZmZjtcblxuICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBOOyArK19pMikge1xuICAgIHZhciBXID0gbmV3IFVpbnQzMkFycmF5KDgwKTtcblxuICAgIGZvciAodmFyIHQgPSAwOyB0IDwgMTY7ICsrdCkge1xuICAgICAgV1t0XSA9IE1bX2kyXVt0XTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBfdCA9IDE2OyBfdCA8IDgwOyArK190KSB7XG4gICAgICBXW190XSA9IFJPVEwoV1tfdCAtIDNdIF4gV1tfdCAtIDhdIF4gV1tfdCAtIDE0XSBeIFdbX3QgLSAxNl0sIDEpO1xuICAgIH1cblxuICAgIHZhciBhID0gSFswXTtcbiAgICB2YXIgYiA9IEhbMV07XG4gICAgdmFyIGMgPSBIWzJdO1xuICAgIHZhciBkID0gSFszXTtcbiAgICB2YXIgZSA9IEhbNF07XG5cbiAgICBmb3IgKHZhciBfdDIgPSAwOyBfdDIgPCA4MDsgKytfdDIpIHtcbiAgICAgIHZhciBzID0gTWF0aC5mbG9vcihfdDIgLyAyMCk7XG4gICAgICB2YXIgVCA9IFJPVEwoYSwgNSkgKyBmKHMsIGIsIGMsIGQpICsgZSArIEtbc10gKyBXW190Ml0gPj4+IDA7XG4gICAgICBlID0gZDtcbiAgICAgIGQgPSBjO1xuICAgICAgYyA9IFJPVEwoYiwgMzApID4+PiAwO1xuICAgICAgYiA9IGE7XG4gICAgICBhID0gVDtcbiAgICB9XG5cbiAgICBIWzBdID0gSFswXSArIGEgPj4+IDA7XG4gICAgSFsxXSA9IEhbMV0gKyBiID4+PiAwO1xuICAgIEhbMl0gPSBIWzJdICsgYyA+Pj4gMDtcbiAgICBIWzNdID0gSFszXSArIGQgPj4+IDA7XG4gICAgSFs0XSA9IEhbNF0gKyBlID4+PiAwO1xuICB9XG5cbiAgcmV0dXJuIFtIWzBdID4+IDI0ICYgMHhmZiwgSFswXSA+PiAxNiAmIDB4ZmYsIEhbMF0gPj4gOCAmIDB4ZmYsIEhbMF0gJiAweGZmLCBIWzFdID4+IDI0ICYgMHhmZiwgSFsxXSA+PiAxNiAmIDB4ZmYsIEhbMV0gPj4gOCAmIDB4ZmYsIEhbMV0gJiAweGZmLCBIWzJdID4+IDI0ICYgMHhmZiwgSFsyXSA+PiAxNiAmIDB4ZmYsIEhbMl0gPj4gOCAmIDB4ZmYsIEhbMl0gJiAweGZmLCBIWzNdID4+IDI0ICYgMHhmZiwgSFszXSA+PiAxNiAmIDB4ZmYsIEhbM10gPj4gOCAmIDB4ZmYsIEhbM10gJiAweGZmLCBIWzRdID4+IDI0ICYgMHhmZiwgSFs0XSA+PiAxNiAmIDB4ZmYsIEhbNF0gPj4gOCAmIDB4ZmYsIEhbNF0gJiAweGZmXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc2hhMTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/sha1.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (stringify);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcz81OGNmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Z0JBQXlnQjtBQUN6Z0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBTyw0REFBUTtBQUNmO0FBQ0E7O0FBRUE7QUFDQTs7QUFFZSx3RUFBUyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvc3RyaW5naWZ5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWFxuICovXG5cbnZhciBieXRlVG9IZXggPSBbXTtcblxuZm9yICh2YXIgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXgucHVzaCgoaSArIDB4MTAwKS50b1N0cmluZygxNikuc3Vic3RyKDEpKTtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5KGFycikge1xuICB2YXIgb2Zmc2V0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwO1xuICAvLyBOb3RlOiBCZSBjYXJlZnVsIGVkaXRpbmcgdGhpcyBjb2RlISAgSXQncyBiZWVuIHR1bmVkIGZvciBwZXJmb3JtYW5jZVxuICAvLyBhbmQgd29ya3MgaW4gd2F5cyB5b3UgbWF5IG5vdCBleHBlY3QuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQvcHVsbC80MzRcbiAgdmFyIHV1aWQgPSAoYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV0pLnRvTG93ZXJDYXNlKCk7IC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcblxuICBpZiAoIXZhbGlkYXRlKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmdpZmllZCBVVUlEIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHJldHVybiB1dWlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHJpbmdpZnk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/stringify.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || Object(_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (v1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YxLmpzP2M1MGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQTJCO0FBQ1k7QUFDdkM7QUFDQTtBQUNBOztBQUVBOztBQUVBLGNBQWM7OztBQUdkO0FBQ0EsbUJBQW1COztBQUVuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0VBQStFO0FBQy9FO0FBQ0E7O0FBRUE7QUFDQSxzREFBc0QsK0NBQUc7O0FBRXpEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7O0FBR0EsdUVBQXVFO0FBQ3ZFOztBQUVBLDJFQUEyRTs7QUFFM0UsNkRBQTZEOztBQUU3RDtBQUNBO0FBQ0EsR0FBRztBQUNIOzs7QUFHQTtBQUNBO0FBQ0EsR0FBRzs7O0FBR0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBdUI7O0FBRXZCLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7O0FBRXJCO0FBQ0E7QUFDQSxzQkFBc0I7O0FBRXRCLG1DQUFtQzs7QUFFbkMsNkJBQTZCOztBQUU3QixpQ0FBaUM7O0FBRWpDLDJCQUEyQjs7QUFFM0IsaUJBQWlCLE9BQU87QUFDeEI7QUFDQTs7QUFFQSxnQkFBZ0IsNkRBQVM7QUFDekI7O0FBRWUsaUVBQUUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YxLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJzsgLy8gKipgdjEoKWAgLSBHZW5lcmF0ZSB0aW1lLWJhc2VkIFVVSUQqKlxuLy9cbi8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9MaW9zSy9VVUlELmpzXG4vLyBhbmQgaHR0cDovL2RvY3MucHl0aG9uLm9yZy9saWJyYXJ5L3V1aWQuaHRtbFxuXG52YXIgX25vZGVJZDtcblxudmFyIF9jbG9ja3NlcTsgLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG5cblxudmFyIF9sYXN0TVNlY3MgPSAwO1xudmFyIF9sYXN0TlNlY3MgPSAwOyAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkIGZvciBBUEkgZGV0YWlsc1xuXG5mdW5jdGlvbiB2MShvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICB2YXIgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgdmFyIGIgPSBidWYgfHwgbmV3IEFycmF5KDE2KTtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBub2RlID0gb3B0aW9ucy5ub2RlIHx8IF9ub2RlSWQ7XG4gIHZhciBjbG9ja3NlcSA9IG9wdGlvbnMuY2xvY2tzZXEgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuY2xvY2tzZXEgOiBfY2xvY2tzZXE7IC8vIG5vZGUgYW5kIGNsb2Nrc2VxIG5lZWQgdG8gYmUgaW5pdGlhbGl6ZWQgdG8gcmFuZG9tIHZhbHVlcyBpZiB0aGV5J3JlIG5vdFxuICAvLyBzcGVjaWZpZWQuICBXZSBkbyB0aGlzIGxhemlseSB0byBtaW5pbWl6ZSBpc3N1ZXMgcmVsYXRlZCB0byBpbnN1ZmZpY2llbnRcbiAgLy8gc3lzdGVtIGVudHJvcHkuICBTZWUgIzE4OVxuXG4gIGlmIChub2RlID09IG51bGwgfHwgY2xvY2tzZXEgPT0gbnVsbCkge1xuICAgIHZhciBzZWVkQnl0ZXMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpO1xuXG4gICAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuNSwgY3JlYXRlIGFuZCA0OC1iaXQgbm9kZSBpZCwgKDQ3IHJhbmRvbSBiaXRzICsgbXVsdGljYXN0IGJpdCA9IDEpXG4gICAgICBub2RlID0gX25vZGVJZCA9IFtzZWVkQnl0ZXNbMF0gfCAweDAxLCBzZWVkQnl0ZXNbMV0sIHNlZWRCeXRlc1syXSwgc2VlZEJ5dGVzWzNdLCBzZWVkQnl0ZXNbNF0sIHNlZWRCeXRlc1s1XV07XG4gICAgfVxuXG4gICAgaWYgKGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjIuMiwgcmFuZG9taXplICgxNCBiaXQpIGNsb2Nrc2VxXG4gICAgICBjbG9ja3NlcSA9IF9jbG9ja3NlcSA9IChzZWVkQnl0ZXNbNl0gPDwgOCB8IHNlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG4gICAgfVxuICB9IC8vIFVVSUQgdGltZXN0YW1wcyBhcmUgMTAwIG5hbm8tc2Vjb25kIHVuaXRzIHNpbmNlIHRoZSBHcmVnb3JpYW4gZXBvY2gsXG4gIC8vICgxNTgyLTEwLTE1IDAwOjAwKS4gIEpTTnVtYmVycyBhcmVuJ3QgcHJlY2lzZSBlbm91Z2ggZm9yIHRoaXMsIHNvXG4gIC8vIHRpbWUgaXMgaGFuZGxlZCBpbnRlcm5hbGx5IGFzICdtc2VjcycgKGludGVnZXIgbWlsbGlzZWNvbmRzKSBhbmQgJ25zZWNzJ1xuICAvLyAoMTAwLW5hbm9zZWNvbmRzIG9mZnNldCBmcm9tIG1zZWNzKSBzaW5jZSB1bml4IGVwb2NoLCAxOTcwLTAxLTAxIDAwOjAwLlxuXG5cbiAgdmFyIG1zZWNzID0gb3B0aW9ucy5tc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5tc2VjcyA6IERhdGUubm93KCk7IC8vIFBlciA0LjIuMS4yLCB1c2UgY291bnQgb2YgdXVpZCdzIGdlbmVyYXRlZCBkdXJpbmcgdGhlIGN1cnJlbnQgY2xvY2tcbiAgLy8gY3ljbGUgdG8gc2ltdWxhdGUgaGlnaGVyIHJlc29sdXRpb24gY2xvY2tcblxuICB2YXIgbnNlY3MgPSBvcHRpb25zLm5zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm5zZWNzIDogX2xhc3ROU2VjcyArIDE7IC8vIFRpbWUgc2luY2UgbGFzdCB1dWlkIGNyZWF0aW9uIChpbiBtc2VjcylcblxuICB2YXIgZHQgPSBtc2VjcyAtIF9sYXN0TVNlY3MgKyAobnNlY3MgLSBfbGFzdE5TZWNzKSAvIDEwMDAwOyAvLyBQZXIgNC4yLjEuMiwgQnVtcCBjbG9ja3NlcSBvbiBjbG9jayByZWdyZXNzaW9uXG5cbiAgaWYgKGR0IDwgMCAmJiBvcHRpb25zLmNsb2Nrc2VxID09PSB1bmRlZmluZWQpIHtcbiAgICBjbG9ja3NlcSA9IGNsb2Nrc2VxICsgMSAmIDB4M2ZmZjtcbiAgfSAvLyBSZXNldCBuc2VjcyBpZiBjbG9jayByZWdyZXNzZXMgKG5ldyBjbG9ja3NlcSkgb3Igd2UndmUgbW92ZWQgb250byBhIG5ld1xuICAvLyB0aW1lIGludGVydmFsXG5cblxuICBpZiAoKGR0IDwgMCB8fCBtc2VjcyA+IF9sYXN0TVNlY3MpICYmIG9wdGlvbnMubnNlY3MgPT09IHVuZGVmaW5lZCkge1xuICAgIG5zZWNzID0gMDtcbiAgfSAvLyBQZXIgNC4yLjEuMiBUaHJvdyBlcnJvciBpZiB0b28gbWFueSB1dWlkcyBhcmUgcmVxdWVzdGVkXG5cblxuICBpZiAobnNlY3MgPj0gMTAwMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1dWlkLnYxKCk6IENhbid0IGNyZWF0ZSBtb3JlIHRoYW4gMTBNIHV1aWRzL3NlY1wiKTtcbiAgfVxuXG4gIF9sYXN0TVNlY3MgPSBtc2VjcztcbiAgX2xhc3ROU2VjcyA9IG5zZWNzO1xuICBfY2xvY2tzZXEgPSBjbG9ja3NlcTsgLy8gUGVyIDQuMS40IC0gQ29udmVydCBmcm9tIHVuaXggZXBvY2ggdG8gR3JlZ29yaWFuIGVwb2NoXG5cbiAgbXNlY3MgKz0gMTIyMTkyOTI4MDAwMDA7IC8vIGB0aW1lX2xvd2BcblxuICB2YXIgdGwgPSAoKG1zZWNzICYgMHhmZmZmZmZmKSAqIDEwMDAwICsgbnNlY3MpICUgMHgxMDAwMDAwMDA7XG4gIGJbaSsrXSA9IHRsID4+PiAyNCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiAxNiAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdGwgJiAweGZmOyAvLyBgdGltZV9taWRgXG5cbiAgdmFyIHRtaCA9IG1zZWNzIC8gMHgxMDAwMDAwMDAgKiAxMDAwMCAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjsgLy8gYHRpbWVfaGlnaF9hbmRfdmVyc2lvbmBcblxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG5cbiAgYltpKytdID0gdG1oID4+PiAxNiAmIDB4ZmY7IC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxID4+PiA4IHwgMHg4MDsgLy8gYGNsb2NrX3NlcV9sb3dgXG5cbiAgYltpKytdID0gY2xvY2tzZXEgJiAweGZmOyAvLyBgbm9kZWBcblxuICBmb3IgKHZhciBuID0gMDsgbiA8IDY7ICsrbikge1xuICAgIGJbaSArIG5dID0gbm9kZVtuXTtcbiAgfVxuXG4gIHJldHVybiBidWYgfHwgc3RyaW5naWZ5KGIpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2MTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v1.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/uuid/dist/esm-browser/md5.js\");\n\n\nvar v3 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (v3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzLmpzPzU0YWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQTJCO0FBQ0E7QUFDM0IsU0FBUyx1REFBRyxhQUFhLCtDQUFHO0FBQ2IsaUVBQUUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHYzNSBmcm9tICcuL3YzNS5qcyc7XG5pbXBvcnQgbWQ1IGZyb20gJy4vbWQ1LmpzJztcbnZhciB2MyA9IHYzNSgndjMnLCAweDMwLCBtZDUpO1xuZXhwb3J0IGRlZmF1bHQgdjM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v3.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************/
/*! exports provided: DNS, URL, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DNS\", function() { return DNS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URL\", function() { return URL; });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nvar DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nvar URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = Object(_parse_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return Object(_stringify_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzNS5qcz9mZmM2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBdUM7QUFDUjs7QUFFL0I7QUFDQSwwQ0FBMEM7O0FBRTFDOztBQUVBLGlCQUFpQixnQkFBZ0I7QUFDakM7QUFDQTs7QUFFQTtBQUNBOztBQUVPO0FBQ0E7QUFDUTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0JBQWtCLHlEQUFLO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEscUJBQXFCLFFBQVE7QUFDN0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFdBQVcsNkRBQVM7QUFDcEIsR0FBRzs7O0FBR0g7QUFDQSw2QkFBNkI7QUFDN0IsR0FBRyxlQUFlOzs7QUFHbEI7QUFDQTtBQUNBO0FBQ0EsQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjM1LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5pbXBvcnQgcGFyc2UgZnJvbSAnLi9wYXJzZS5qcyc7XG5cbmZ1bmN0aW9uIHN0cmluZ1RvQnl0ZXMoc3RyKSB7XG4gIHN0ciA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChzdHIpKTsgLy8gVVRGOCBlc2NhcGVcblxuICB2YXIgYnl0ZXMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIGJ5dGVzLnB1c2goc3RyLmNoYXJDb2RlQXQoaSkpO1xuICB9XG5cbiAgcmV0dXJuIGJ5dGVzO1xufVxuXG5leHBvcnQgdmFyIEROUyA9ICc2YmE3YjgxMC05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0IHZhciBVUkwgPSAnNmJhN2I4MTEtOWRhZC0xMWQxLTgwYjQtMDBjMDRmZDQzMGM4JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChuYW1lLCB2ZXJzaW9uLCBoYXNoZnVuYykge1xuICBmdW5jdGlvbiBnZW5lcmF0ZVVVSUQodmFsdWUsIG5hbWVzcGFjZSwgYnVmLCBvZmZzZXQpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgdmFsdWUgPSBzdHJpbmdUb0J5dGVzKHZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hbWVzcGFjZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG5hbWVzcGFjZSA9IHBhcnNlKG5hbWVzcGFjZSk7XG4gICAgfVxuXG4gICAgaWYgKG5hbWVzcGFjZS5sZW5ndGggIT09IDE2KSB7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ05hbWVzcGFjZSBtdXN0IGJlIGFycmF5LWxpa2UgKDE2IGl0ZXJhYmxlIGludGVnZXIgdmFsdWVzLCAwLTI1NSknKTtcbiAgICB9IC8vIENvbXB1dGUgaGFzaCBvZiBuYW1lc3BhY2UgYW5kIHZhbHVlLCBQZXIgNC4zXG4gICAgLy8gRnV0dXJlOiBVc2Ugc3ByZWFkIHN5bnRheCB3aGVuIHN1cHBvcnRlZCBvbiBhbGwgcGxhdGZvcm1zLCBlLmcuIGBieXRlcyA9XG4gICAgLy8gaGFzaGZ1bmMoWy4uLm5hbWVzcGFjZSwgLi4uIHZhbHVlXSlgXG5cblxuICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KDE2ICsgdmFsdWUubGVuZ3RoKTtcbiAgICBieXRlcy5zZXQobmFtZXNwYWNlKTtcbiAgICBieXRlcy5zZXQodmFsdWUsIG5hbWVzcGFjZS5sZW5ndGgpO1xuICAgIGJ5dGVzID0gaGFzaGZ1bmMoYnl0ZXMpO1xuICAgIGJ5dGVzWzZdID0gYnl0ZXNbNl0gJiAweDBmIHwgdmVyc2lvbjtcbiAgICBieXRlc1s4XSA9IGJ5dGVzWzhdICYgMHgzZiB8IDB4ODA7XG5cbiAgICBpZiAoYnVmKSB7XG4gICAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSB7XG4gICAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IGJ5dGVzW2ldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYnVmO1xuICAgIH1cblxuICAgIHJldHVybiBzdHJpbmdpZnkoYnl0ZXMpO1xuICB9IC8vIEZ1bmN0aW9uI25hbWUgaXMgbm90IHNldHRhYmxlIG9uIHNvbWUgcGxhdGZvcm1zICgjMjcwKVxuXG5cbiAgdHJ5IHtcbiAgICBnZW5lcmF0ZVVVSUQubmFtZSA9IG5hbWU7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICB9IGNhdGNoIChlcnIpIHt9IC8vIEZvciBDb21tb25KUyBkZWZhdWx0IGV4cG9ydCBzdXBwb3J0XG5cblxuICBnZW5lcmF0ZVVVSUQuRE5TID0gRE5TO1xuICBnZW5lcmF0ZVVVSUQuVVJMID0gVVJMO1xuICByZXR1cm4gZ2VuZXJhdGVVVUlEO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v35.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return Object(_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (v4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzP2VjMjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQTJCO0FBQ1k7O0FBRXZDO0FBQ0E7QUFDQSwrQ0FBK0MsK0NBQUcsSUFBSTs7QUFFdEQ7QUFDQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7O0FBRUEsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFNBQVMsNkRBQVM7QUFDbEI7O0FBRWUsaUVBQUUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v4.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/uuid/dist/esm-browser/sha1.js\");\n\n\nvar v5 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (v5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y1LmpzPzI2YmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQTJCO0FBQ0U7QUFDN0IsU0FBUyx1REFBRyxhQUFhLGdEQUFJO0FBQ2QsaUVBQUUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y1LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHYzNSBmcm9tICcuL3YzNS5qcyc7XG5pbXBvcnQgc2hhMSBmcm9tICcuL3NoYTEuanMnO1xudmFyIHY1ID0gdjM1KCd2NScsIDB4NTAsIHNoYTEpO1xuZXhwb3J0IGRlZmF1bHQgdjU7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (validate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZhbGlkYXRlLmpzPzA2ZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUErQjs7QUFFL0I7QUFDQSxxQ0FBcUMsaURBQUs7QUFDMUM7O0FBRWUsdUVBQVEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZhbGlkYXRlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJFR0VYIGZyb20gJy4vcmVnZXguanMnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgUkVHRVgudGVzdCh1dWlkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsaWRhdGU7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/validate.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/version.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction version(uuid) {\n  if (!Object(_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (version);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZlcnNpb24uanM/NzZlOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQXFDOztBQUVyQztBQUNBLE9BQU8sNERBQVE7QUFDZjtBQUNBOztBQUVBO0FBQ0E7O0FBRWUsc0VBQU8iLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZlcnNpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5cbmZ1bmN0aW9uIHZlcnNpb24odXVpZCkge1xuICBpZiAoIXZhbGlkYXRlKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdJbnZhbGlkIFVVSUQnKTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZUludCh1dWlkLnN1YnN0cigxNCwgMSksIDE2KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmVyc2lvbjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/version.js\n");

/***/ }),

/***/ "./src/components/index.ts":
/*!*********************************!*\
  !*** ./src/components/index.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL3NyYy9jb21wb25lbnRzL2luZGV4LnRzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/index.ts\n");

/***/ }),

/***/ "./src/components/interactions/DragInteraction.ts":
/*!********************************************************!*\
  !*** ./src/components/interactions/DragInteraction.ts ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass DragInteraction {\n  constructor(args) {\n    _defineProperty(this, \"offsetX\", 0);\n\n    _defineProperty(this, \"offsetY\", 0);\n\n    _defineProperty(this, \"offsetLeft\", 0);\n\n    _defineProperty(this, \"offsetTop\", 0);\n\n    _defineProperty(this, \"initialized\", false);\n\n    this.offsetX = args.offsetX;\n    this.offsetY = args.offsetY;\n    this.offsetLeft = args.offsetLeft;\n    this.offsetTop = args.offsetTop;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DragInteraction);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvY29tcG9uZW50cy9pbnRlcmFjdGlvbnMvRHJhZ0ludGVyYWN0aW9uLnRzP2I1MDMiXSwibmFtZXMiOlsiRHJhZ0ludGVyYWN0aW9uIiwiY29uc3RydWN0b3IiLCJhcmdzIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJvZmZzZXRMZWZ0Iiwib2Zmc2V0VG9wIl0sIm1hcHBpbmdzIjoiOzs7QUFPQSxNQUFNQSxlQUFOLENBQXNCO0FBT3BCQyxhQUFXLENBQUNDLElBQUQsRUFBYTtBQUFBLHFDQU5kLENBTWM7O0FBQUEscUNBTGQsQ0FLYzs7QUFBQSx3Q0FKWCxDQUlXOztBQUFBLHVDQUhaLENBR1k7O0FBQUEseUNBRlYsS0FFVTs7QUFDdEIsU0FBS0MsT0FBTCxHQUFlRCxJQUFJLENBQUNDLE9BQXBCO0FBQ0EsU0FBS0MsT0FBTCxHQUFlRixJQUFJLENBQUNFLE9BQXBCO0FBQ0EsU0FBS0MsVUFBTCxHQUFrQkgsSUFBSSxDQUFDRyxVQUF2QjtBQUNBLFNBQUtDLFNBQUwsR0FBaUJKLElBQUksQ0FBQ0ksU0FBdEI7QUFDRDs7QUFabUI7O0FBZVBOLDhFQUFmIiwiZmlsZSI6Ii4vc3JjL2NvbXBvbmVudHMvaW50ZXJhY3Rpb25zL0RyYWdJbnRlcmFjdGlvbi50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBBcmdzIHtcbiAgb2Zmc2V0WDogbnVtYmVyO1xuICBvZmZzZXRZOiBudW1iZXI7XG4gIG9mZnNldExlZnQ6IG51bWJlcjtcbiAgb2Zmc2V0VG9wOiBudW1iZXI7XG59XG5cbmNsYXNzIERyYWdJbnRlcmFjdGlvbiB7XG4gIG9mZnNldFggPSAwO1xuICBvZmZzZXRZID0gMDtcbiAgb2Zmc2V0TGVmdCA9IDA7XG4gIG9mZnNldFRvcCA9IDA7XG4gIGluaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoYXJnczogQXJncykge1xuICAgIHRoaXMub2Zmc2V0WCA9IGFyZ3Mub2Zmc2V0WDtcbiAgICB0aGlzLm9mZnNldFkgPSBhcmdzLm9mZnNldFk7XG4gICAgdGhpcy5vZmZzZXRMZWZ0ID0gYXJncy5vZmZzZXRMZWZ0O1xuICAgIHRoaXMub2Zmc2V0VG9wID0gYXJncy5vZmZzZXRUb3A7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRHJhZ0ludGVyYWN0aW9uO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/interactions/DragInteraction.ts\n");

/***/ }),

/***/ "./src/dom-elements/DNDOverlord.ts":
/*!*****************************************!*\
  !*** ./src/dom-elements/DNDOverlord.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n/* harmony import */ var _brochington_ecstatic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @brochington/ecstatic */ \"../twitch/ecstatic/dist/bundle.js\");\n/* harmony import */ var _brochington_ecstatic__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_brochington_ecstatic__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var systems__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! systems */ \"./src/systems/index.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n  This is the main provider of state for all the drag and drop components\n  within it. \n*/\n\n\n\n\nclass DNDOverlord extends HTMLElement {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"overlordID\", void 0);\n\n    _defineProperty(this, \"world\", void 0);\n\n    _defineProperty(this, \"systems\", void 0);\n\n    console.log(\"construct DNDOverlord\");\n    this.overlordID = Object(uuid__WEBPACK_IMPORTED_MODULE_0__[\"v4\"])();\n    this.world = new _brochington_ecstatic__WEBPACK_IMPORTED_MODULE_1__[\"World\"]();\n    this.systems = new systems__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.world);\n  }\n\n  connectedCallback() {\n    console.log('cc DNDOverlord');\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DNDOverlord);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvZG9tLWVsZW1lbnRzL0RORE92ZXJsb3JkLnRzP2FkNzgiXSwibmFtZXMiOlsiRE5ET3ZlcmxvcmQiLCJIVE1MRWxlbWVudCIsImNvbnN0cnVjdG9yIiwiY29uc29sZSIsImxvZyIsIm92ZXJsb3JkSUQiLCJ1dWlkdjQiLCJ3b3JsZCIsIldvcmxkIiwic3lzdGVtcyIsIlN5c3RlbXMiLCJjb25uZWN0ZWRDYWxsYmFjayJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBS0E7QUFDQTtBQUVBOztBQUVBLE1BQU1BLFdBQU4sU0FBMEJDLFdBQTFCLENBQXNDO0FBT3BDQyxhQUFXLEdBQUc7QUFDWjs7QUFEWTs7QUFBQTs7QUFBQTs7QUFFWkMsV0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVo7QUFFQSxTQUFLQyxVQUFMLEdBQWtCQywrQ0FBTSxFQUF4QjtBQUVBLFNBQUtDLEtBQUwsR0FBYSxJQUFJQywyREFBSixFQUFiO0FBQ0EsU0FBS0MsT0FBTCxHQUFlLElBQUlDLCtDQUFKLENBQVksS0FBS0gsS0FBakIsQ0FBZjtBQUNEOztBQUVESSxtQkFBaUIsR0FBRztBQUNsQlIsV0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVo7QUFDRDs7QUFuQm1DOztBQXNCdkJKLDBFQUFmIiwiZmlsZSI6Ii4vc3JjL2RvbS1lbGVtZW50cy9ETkRPdmVybG9yZC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gIFRoaXMgaXMgdGhlIG1haW4gcHJvdmlkZXIgb2Ygc3RhdGUgZm9yIGFsbCB0aGUgZHJhZyBhbmQgZHJvcCBjb21wb25lbnRzXG4gIHdpdGhpbiBpdC4gXG4qL1xuXG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tIFwidXVpZFwiO1xuaW1wb3J0IHsgV29ybGQgfSBmcm9tICdAYnJvY2hpbmd0b24vZWNzdGF0aWMnO1xuaW1wb3J0IHsgQ29tcG9uZW50cyB9IGZyb20gJy4uL2NvbXBvbmVudHMnO1xuaW1wb3J0IFN5c3RlbXMgZnJvbSBcInN5c3RlbXNcIjtcblxuY2xhc3MgRE5ET3ZlcmxvcmQgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gIG92ZXJsb3JkSUQ6IHN0cmluZztcblxuICB3b3JsZDogV29ybGQ8Q29tcG9uZW50cz47XG5cbiAgc3lzdGVtczogU3lzdGVtcztcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIGNvbnNvbGUubG9nKFwiY29uc3RydWN0IERORE92ZXJsb3JkXCIpO1xuXG4gICAgdGhpcy5vdmVybG9yZElEID0gdXVpZHY0KCk7XG5cbiAgICB0aGlzLndvcmxkID0gbmV3IFdvcmxkPENvbXBvbmVudHM+KCk7XG4gICAgdGhpcy5zeXN0ZW1zID0gbmV3IFN5c3RlbXModGhpcy53b3JsZCk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBjb25zb2xlLmxvZygnY2MgRE5ET3ZlcmxvcmQnKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBETkRPdmVybG9yZDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/dom-elements/DNDOverlord.ts\n");

/***/ }),

/***/ "./src/dom-elements/DragContent.ts":
/*!*****************************************!*\
  !*** ./src/dom-elements/DragContent.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var utils_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils/elements */ \"./src/utils/elements.ts\");\n/* harmony import */ var dom_elements_DragWrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dom-elements/DragWrapper */ \"./src/dom-elements/DragWrapper.ts\");\n/* harmony import */ var components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! components/interactions/DragInteraction */ \"./src/components/interactions/DragInteraction.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n/*\n  This should probably add and remove itself from the drag wrapper state.\n  I think all internal dnd components probably should do this.\n\n  attributes:\n    - auto-return: element returns to its original placement after drag end\n      - NOTE: should this be default behavior? Maybe hold-position should be\n              an attr instead...\n\n    - hold-position: tells the dragged item to maintain current position after\n                     being dragged.\n*/\n\nclass DragContent extends HTMLElement {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"_id\", void 0);\n\n    console.log(\"construct DragContent\");\n    this._id = Math.random();\n    const dragWrapper = this.closest(\"drag-wrapper\");\n\n    if (dragWrapper) {\n      dragWrapper.entity.add(this);\n    }\n\n    this.addEventListener(\"pointerdown\", this.onPointerDown);\n    this.addEventListener(\"pointerover\", this.onPointerOver);\n  }\n\n  onPointerDown(evt) {\n    // console.log('pointer_down', this._id);\n    const {\n      world,\n      systems\n    } = Object(utils_elements__WEBPACK_IMPORTED_MODULE_0__[\"getOverlord\"])(this);\n    const dragWrapper = this.closest('drag-wrapper');\n    if (!dragWrapper) return; // OffsetLeft and OffsetTop are use to calculate the original top and left\n    // when a transform is applied. This is needed because getBoundingClientRect()\n    // inlcudes this original number.\n\n    const t = getComputedStyle(this, null).transform;\n    let offsetLeft = this.offsetLeft;\n    let offsetTop = this.offsetTop;\n\n    if (t !== \"none\") {\n      var _t$match;\n\n      const tParsed = (_t$match = t.match(/-?\\d+\\.?\\d*/g)) === null || _t$match === void 0 ? void 0 : _t$match.map(Number);\n\n      if (tParsed) {\n        const rect = this.getBoundingClientRect();\n        offsetLeft = rect.left - tParsed[4];\n        offsetTop = rect.top - tParsed[5];\n      }\n    }\n\n    console.log(\"offsets\", offsetLeft, offsetTop);\n    dragWrapper.entity.add(new components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      offsetLeft: offsetLeft,\n      offsetTop: offsetTop,\n      // offsetX and offsetY are the offset of where the mouse hits within the drag element.\n      offsetX: evt.offsetX,\n      offsetY: evt.offsetY\n    }));\n    systems.run();\n  } // onPointerOver() {\n  //   console.log(\"over!\", this._id);\n  // }\n\n\n  connectedCallback() {\n    console.log(\"cc DragContent\");\n  }\n\n  disconnectedCallback() {\n    var _getWorld$locate;\n\n    (_getWorld$locate = Object(utils_elements__WEBPACK_IMPORTED_MODULE_0__[\"getWorld\"])(this).locate(dom_elements_DragWrapper__WEBPACK_IMPORTED_MODULE_1__[\"default\"])) === null || _getWorld$locate === void 0 ? void 0 : _getWorld$locate.remove(DragContent);\n    this.removeEventListener(\"pointerdown\", this.onPointerDown);\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DragContent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvZG9tLWVsZW1lbnRzL0RyYWdDb250ZW50LnRzPzQzYTUiXSwibmFtZXMiOlsiRHJhZ0NvbnRlbnQiLCJIVE1MRWxlbWVudCIsImNvbnN0cnVjdG9yIiwiY29uc29sZSIsImxvZyIsIl9pZCIsIk1hdGgiLCJyYW5kb20iLCJkcmFnV3JhcHBlciIsImNsb3Nlc3QiLCJlbnRpdHkiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwib25Qb2ludGVyRG93biIsIm9uUG9pbnRlck92ZXIiLCJldnQiLCJ3b3JsZCIsInN5c3RlbXMiLCJnZXRPdmVybG9yZCIsInQiLCJnZXRDb21wdXRlZFN0eWxlIiwidHJhbnNmb3JtIiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsInRQYXJzZWQiLCJtYXRjaCIsIm1hcCIsIk51bWJlciIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJsZWZ0IiwidG9wIiwiRHJhZ0ludGVyYWN0aW9uIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJydW4iLCJjb25uZWN0ZWRDYWxsYmFjayIsImRpc2Nvbm5lY3RlZENhbGxiYWNrIiwiZ2V0V29ybGQiLCJsb2NhdGUiLCJEcmFnV3JhcHBlciIsInJlbW92ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBO0FBR0E7QUFDQTtBQUVBOzs7Ozs7Ozs7Ozs7O0FBYUEsTUFBTUEsV0FBTixTQUEwQkMsV0FBMUIsQ0FBc0M7QUFHcENDLGFBQVcsR0FBRztBQUNaOztBQURZOztBQUVaQyxXQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWjtBQUNBLFNBQUtDLEdBQUwsR0FBV0MsSUFBSSxDQUFDQyxNQUFMLEVBQVg7QUFFQSxVQUFNQyxXQUFXLEdBQUcsS0FBS0MsT0FBTCxDQUEwQixjQUExQixDQUFwQjs7QUFFQSxRQUFJRCxXQUFKLEVBQWlCO0FBQ2ZBLGlCQUFXLENBQUNFLE1BQVosQ0FBbUJDLEdBQW5CLENBQXVCLElBQXZCO0FBQ0Q7O0FBRUQsU0FBS0MsZ0JBQUwsQ0FBc0IsYUFBdEIsRUFBcUMsS0FBS0MsYUFBMUM7QUFDQSxTQUFLRCxnQkFBTCxDQUFzQixhQUF0QixFQUFxQyxLQUFLRSxhQUExQztBQUNEOztBQUVERCxlQUFhLENBQUNFLEdBQUQsRUFBb0I7QUFDL0I7QUFDQSxVQUFNO0FBQUVDLFdBQUY7QUFBU0M7QUFBVCxRQUFxQkMsa0VBQVcsQ0FBQyxJQUFELENBQXRDO0FBQ0EsVUFBTVYsV0FBVyxHQUFHLEtBQUtDLE9BQUwsQ0FBMEIsY0FBMUIsQ0FBcEI7QUFFQSxRQUFJLENBQUNELFdBQUwsRUFBa0IsT0FMYSxDQU8vQjtBQUNBO0FBQ0E7O0FBQ0EsVUFBTVcsQ0FBQyxHQUFHQyxnQkFBZ0IsQ0FBQyxJQUFELEVBQU8sSUFBUCxDQUFoQixDQUE2QkMsU0FBdkM7QUFDQSxRQUFJQyxVQUFVLEdBQUcsS0FBS0EsVUFBdEI7QUFDQSxRQUFJQyxTQUFTLEdBQUcsS0FBS0EsU0FBckI7O0FBRUEsUUFBSUosQ0FBQyxLQUFLLE1BQVYsRUFBa0I7QUFBQTs7QUFDaEIsWUFBTUssT0FBTyxlQUFHTCxDQUFDLENBQUNNLEtBQUYsQ0FBUSxjQUFSLENBQUgsNkNBQUcsU0FBeUJDLEdBQXpCLENBQTZCQyxNQUE3QixDQUFoQjs7QUFFQSxVQUFJSCxPQUFKLEVBQWE7QUFDWCxjQUFNSSxJQUFJLEdBQUcsS0FBS0MscUJBQUwsRUFBYjtBQUNBUCxrQkFBVSxHQUFHTSxJQUFJLENBQUNFLElBQUwsR0FBWU4sT0FBTyxDQUFDLENBQUQsQ0FBaEM7QUFDQUQsaUJBQVMsR0FBR0ssSUFBSSxDQUFDRyxHQUFMLEdBQVdQLE9BQU8sQ0FBQyxDQUFELENBQTlCO0FBQ0Q7QUFDRjs7QUFFRHJCLFdBQU8sQ0FBQ0MsR0FBUixDQUFZLFNBQVosRUFBdUJrQixVQUF2QixFQUFtQ0MsU0FBbkM7QUFFQWYsZUFBVyxDQUFDRSxNQUFaLENBQW1CQyxHQUFuQixDQUNFLElBQUlxQiwrRUFBSixDQUFvQjtBQUNsQlYsZ0JBQVUsRUFBRUEsVUFETTtBQUVsQkMsZUFBUyxFQUFFQSxTQUZPO0FBR2xCO0FBQ0FVLGFBQU8sRUFBRWxCLEdBQUcsQ0FBQ2tCLE9BSks7QUFLbEJDLGFBQU8sRUFBRW5CLEdBQUcsQ0FBQ21CO0FBTEssS0FBcEIsQ0FERjtBQVVBakIsV0FBTyxDQUFDa0IsR0FBUjtBQUNELEdBdkRtQyxDQXlEcEM7QUFDQTtBQUNBOzs7QUFFQUMsbUJBQWlCLEdBQUc7QUFDbEJqQyxXQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBWjtBQUNEOztBQUVEaUMsc0JBQW9CLEdBQUc7QUFBQTs7QUFDckIsd0JBQUFDLCtEQUFRLENBQUMsSUFBRCxDQUFSLENBQWVDLE1BQWYsQ0FBc0JDLGdFQUF0Qix1RUFBb0NDLE1BQXBDLENBQTJDekMsV0FBM0M7QUFFQSxTQUFLMEMsbUJBQUwsQ0FBeUIsYUFBekIsRUFBd0MsS0FBSzdCLGFBQTdDO0FBQ0Q7O0FBckVtQzs7QUF3RXZCYiwwRUFBZiIsImZpbGUiOiIuL3NyYy9kb20tZWxlbWVudHMvRHJhZ0NvbnRlbnQudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbnRpdHkgfSBmcm9tIFwiQGJyb2NoaW5ndG9uL2Vjc3RhdGljXCI7XG5pbXBvcnQgeyBnZXRXb3JsZCwgZ2V0T3ZlcmxvcmQgfSBmcm9tIFwidXRpbHMvZWxlbWVudHNcIjtcblxuaW1wb3J0IERORE92ZXJsb3JkIGZyb20gXCJkb20tZWxlbWVudHMvRE5ET3ZlcmxvcmRcIjtcbmltcG9ydCBEcmFnV3JhcHBlciBmcm9tIFwiZG9tLWVsZW1lbnRzL0RyYWdXcmFwcGVyXCI7XG5pbXBvcnQgRHJhZ0ludGVyYWN0aW9uIGZyb20gXCJjb21wb25lbnRzL2ludGVyYWN0aW9ucy9EcmFnSW50ZXJhY3Rpb25cIjtcblxuLypcbiAgVGhpcyBzaG91bGQgcHJvYmFibHkgYWRkIGFuZCByZW1vdmUgaXRzZWxmIGZyb20gdGhlIGRyYWcgd3JhcHBlciBzdGF0ZS5cbiAgSSB0aGluayBhbGwgaW50ZXJuYWwgZG5kIGNvbXBvbmVudHMgcHJvYmFibHkgc2hvdWxkIGRvIHRoaXMuXG5cbiAgYXR0cmlidXRlczpcbiAgICAtIGF1dG8tcmV0dXJuOiBlbGVtZW50IHJldHVybnMgdG8gaXRzIG9yaWdpbmFsIHBsYWNlbWVudCBhZnRlciBkcmFnIGVuZFxuICAgICAgLSBOT1RFOiBzaG91bGQgdGhpcyBiZSBkZWZhdWx0IGJlaGF2aW9yPyBNYXliZSBob2xkLXBvc2l0aW9uIHNob3VsZCBiZVxuICAgICAgICAgICAgICBhbiBhdHRyIGluc3RlYWQuLi5cblxuICAgIC0gaG9sZC1wb3NpdGlvbjogdGVsbHMgdGhlIGRyYWdnZWQgaXRlbSB0byBtYWludGFpbiBjdXJyZW50IHBvc2l0aW9uIGFmdGVyXG4gICAgICAgICAgICAgICAgICAgICBiZWluZyBkcmFnZ2VkLlxuKi9cblxuY2xhc3MgRHJhZ0NvbnRlbnQgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gIF9pZDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgY29uc29sZS5sb2coXCJjb25zdHJ1Y3QgRHJhZ0NvbnRlbnRcIik7XG4gICAgdGhpcy5faWQgPSBNYXRoLnJhbmRvbSgpO1xuXG4gICAgY29uc3QgZHJhZ1dyYXBwZXIgPSB0aGlzLmNsb3Nlc3Q8RHJhZ1dyYXBwZXI+KFwiZHJhZy13cmFwcGVyXCIpO1xuXG4gICAgaWYgKGRyYWdXcmFwcGVyKSB7XG4gICAgICBkcmFnV3JhcHBlci5lbnRpdHkuYWRkKHRoaXMpO1xuICAgIH1cblxuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsIHRoaXMub25Qb2ludGVyRG93bik7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcm92ZXJcIiwgdGhpcy5vblBvaW50ZXJPdmVyKTtcbiAgfVxuXG4gIG9uUG9pbnRlckRvd24oZXZ0OiBQb2ludGVyRXZlbnQpIHtcbiAgICAvLyBjb25zb2xlLmxvZygncG9pbnRlcl9kb3duJywgdGhpcy5faWQpO1xuICAgIGNvbnN0IHsgd29ybGQsIHN5c3RlbXMgfSA9IGdldE92ZXJsb3JkKHRoaXMpO1xuICAgIGNvbnN0IGRyYWdXcmFwcGVyID0gdGhpcy5jbG9zZXN0PERyYWdXcmFwcGVyPignZHJhZy13cmFwcGVyJyk7XG5cbiAgICBpZiAoIWRyYWdXcmFwcGVyKSByZXR1cm47XG5cbiAgICAvLyBPZmZzZXRMZWZ0IGFuZCBPZmZzZXRUb3AgYXJlIHVzZSB0byBjYWxjdWxhdGUgdGhlIG9yaWdpbmFsIHRvcCBhbmQgbGVmdFxuICAgIC8vIHdoZW4gYSB0cmFuc2Zvcm0gaXMgYXBwbGllZC4gVGhpcyBpcyBuZWVkZWQgYmVjYXVzZSBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgIC8vIGlubGN1ZGVzIHRoaXMgb3JpZ2luYWwgbnVtYmVyLlxuICAgIGNvbnN0IHQgPSBnZXRDb21wdXRlZFN0eWxlKHRoaXMsIG51bGwpLnRyYW5zZm9ybTtcbiAgICBsZXQgb2Zmc2V0TGVmdCA9IHRoaXMub2Zmc2V0TGVmdDtcbiAgICBsZXQgb2Zmc2V0VG9wID0gdGhpcy5vZmZzZXRUb3A7XG5cbiAgICBpZiAodCAhPT0gXCJub25lXCIpIHtcbiAgICAgIGNvbnN0IHRQYXJzZWQgPSB0Lm1hdGNoKC8tP1xcZCtcXC4/XFxkKi9nKT8ubWFwKE51bWJlcik7XG5cbiAgICAgIGlmICh0UGFyc2VkKSB7XG4gICAgICAgIGNvbnN0IHJlY3QgPSB0aGlzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICBvZmZzZXRMZWZ0ID0gcmVjdC5sZWZ0IC0gdFBhcnNlZFs0XTtcbiAgICAgICAgb2Zmc2V0VG9wID0gcmVjdC50b3AgLSB0UGFyc2VkWzVdO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKFwib2Zmc2V0c1wiLCBvZmZzZXRMZWZ0LCBvZmZzZXRUb3ApO1xuXG4gICAgZHJhZ1dyYXBwZXIuZW50aXR5LmFkZChcbiAgICAgIG5ldyBEcmFnSW50ZXJhY3Rpb24oe1xuICAgICAgICBvZmZzZXRMZWZ0OiBvZmZzZXRMZWZ0LFxuICAgICAgICBvZmZzZXRUb3A6IG9mZnNldFRvcCxcbiAgICAgICAgLy8gb2Zmc2V0WCBhbmQgb2Zmc2V0WSBhcmUgdGhlIG9mZnNldCBvZiB3aGVyZSB0aGUgbW91c2UgaGl0cyB3aXRoaW4gdGhlIGRyYWcgZWxlbWVudC5cbiAgICAgICAgb2Zmc2V0WDogZXZ0Lm9mZnNldFgsXG4gICAgICAgIG9mZnNldFk6IGV2dC5vZmZzZXRZLFxuICAgICAgfSlcbiAgICApO1xuXG4gICAgc3lzdGVtcy5ydW4oKTtcbiAgfVxuXG4gIC8vIG9uUG9pbnRlck92ZXIoKSB7XG4gIC8vICAgY29uc29sZS5sb2coXCJvdmVyIVwiLCB0aGlzLl9pZCk7XG4gIC8vIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBjb25zb2xlLmxvZyhcImNjIERyYWdDb250ZW50XCIpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgZ2V0V29ybGQodGhpcykubG9jYXRlKERyYWdXcmFwcGVyKT8ucmVtb3ZlKERyYWdDb250ZW50KTtcblxuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsIHRoaXMub25Qb2ludGVyRG93bik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRHJhZ0NvbnRlbnQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/dom-elements/DragContent.ts\n");

/***/ }),

/***/ "./src/dom-elements/DragWrapper.ts":
/*!*****************************************!*\
  !*** ./src/dom-elements/DragWrapper.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var utils_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils/elements */ \"./src/utils/elements.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n Things that will need to be done:\n  - Monitor adding/removing of drag related elements. Maybe add mutation observers\n   to them or something.\n  - Need to figure out some kind of state management. Will the state be global?\n*/\n\n\nclass DragWrapper extends HTMLElement {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"entity\", void 0);\n\n    this.entity = Object(utils_elements__WEBPACK_IMPORTED_MODULE_0__[\"getWorld\"])(this).createEntity().add(this);\n  }\n\n  connectedCallback() {\n    console.log(\"cc DragWrapper\");\n  }\n\n  disconnectedCallback() {\n    this.entity.destroy();\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DragWrapper);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvZG9tLWVsZW1lbnRzL0RyYWdXcmFwcGVyLnRzP2U4ODUiXSwibmFtZXMiOlsiRHJhZ1dyYXBwZXIiLCJIVE1MRWxlbWVudCIsImNvbnN0cnVjdG9yIiwiZW50aXR5IiwiZ2V0V29ybGQiLCJjcmVhdGVFbnRpdHkiLCJhZGQiLCJjb25uZWN0ZWRDYWxsYmFjayIsImNvbnNvbGUiLCJsb2ciLCJkaXNjb25uZWN0ZWRDYWxsYmFjayIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0FBVUE7O0FBRUEsTUFBTUEsV0FBTixTQUEwQkMsV0FBMUIsQ0FBc0M7QUFHcENDLGFBQVcsR0FBRztBQUNaOztBQURZOztBQUdaLFNBQUtDLE1BQUwsR0FBY0MsK0RBQVEsQ0FBQyxJQUFELENBQVIsQ0FBZUMsWUFBZixHQUE4QkMsR0FBOUIsQ0FBa0MsSUFBbEMsQ0FBZDtBQUNEOztBQUVEQyxtQkFBaUIsR0FBRztBQUNsQkMsV0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVo7QUFDRDs7QUFFREMsc0JBQW9CLEdBQUc7QUFDckIsU0FBS1AsTUFBTCxDQUFZUSxPQUFaO0FBQ0Q7O0FBZm1DOztBQWtCdkJYLDBFQUFmIiwiZmlsZSI6Ii4vc3JjL2RvbS1lbGVtZW50cy9EcmFnV3JhcHBlci50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gVGhpbmdzIHRoYXQgd2lsbCBuZWVkIHRvIGJlIGRvbmU6XG4gIC0gTW9uaXRvciBhZGRpbmcvcmVtb3Zpbmcgb2YgZHJhZyByZWxhdGVkIGVsZW1lbnRzLiBNYXliZSBhZGQgbXV0YXRpb24gb2JzZXJ2ZXJzXG4gICB0byB0aGVtIG9yIHNvbWV0aGluZy5cbiAgLSBOZWVkIHRvIGZpZ3VyZSBvdXQgc29tZSBraW5kIG9mIHN0YXRlIG1hbmFnZW1lbnQuIFdpbGwgdGhlIHN0YXRlIGJlIGdsb2JhbD9cbiovXG5cbmltcG9ydCB7IEVudGl0eSB9IGZyb20gJ0Bicm9jaGluZ3Rvbi9lY3N0YXRpYyc7XG5pbXBvcnQgRE5ET3ZlcmxvcmQgZnJvbSAnZG9tLWVsZW1lbnRzL0RORE92ZXJsb3JkJztcbmltcG9ydCB7IENvbXBvbmVudHMgfSBmcm9tICdjb21wb25lbnRzJztcbmltcG9ydCB7IGdldFdvcmxkIH0gZnJvbSAndXRpbHMvZWxlbWVudHMnO1xuXG5jbGFzcyBEcmFnV3JhcHBlciBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgZW50aXR5OiBFbnRpdHk8Q29tcG9uZW50cz47XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuZW50aXR5ID0gZ2V0V29ybGQodGhpcykuY3JlYXRlRW50aXR5KCkuYWRkKHRoaXMpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29uc29sZS5sb2coXCJjYyBEcmFnV3JhcHBlclwiKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMuZW50aXR5LmRlc3Ryb3koKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBEcmFnV3JhcHBlcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/dom-elements/DragWrapper.ts\n");

/***/ }),

/***/ "./src/dom-elements/DropZone.ts":
/*!**************************************!*\
  !*** ./src/dom-elements/DropZone.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! components/interactions/DragInteraction */ \"./src/components/interactions/DragInteraction.ts\");\n/* harmony import */ var utils_elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! utils/elements */ \"./src/utils/elements.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nclass DropZone extends HTMLElement {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"entity\", void 0);\n\n    this.entity = Object(utils_elements__WEBPACK_IMPORTED_MODULE_1__[\"getWorld\"])(this).createEntity().add(this);\n    this.addEventListener('pointerover', this.onPointerOver);\n  }\n\n  onPointerOver() {\n    console.log('over drop zone!');\n    const world = Object(utils_elements__WEBPACK_IMPORTED_MODULE_1__[\"getWorld\"])(this);\n    const things = world.locateAll(components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    console.log(things);\n    world.locateAll(components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_0__[\"default\"]).map(ent => {\n      console.log('drag entity', ent);\n    });\n  }\n\n  disconnectedCallback() {\n    this.entity.destroy();\n    this.removeEventListener('pointerover', this.onPointerOver);\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DropZone);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvZG9tLWVsZW1lbnRzL0Ryb3Bab25lLnRzPzNjN2IiXSwibmFtZXMiOlsiRHJvcFpvbmUiLCJIVE1MRWxlbWVudCIsImNvbnN0cnVjdG9yIiwiZW50aXR5IiwiZ2V0V29ybGQiLCJjcmVhdGVFbnRpdHkiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwib25Qb2ludGVyT3ZlciIsImNvbnNvbGUiLCJsb2ciLCJ3b3JsZCIsInRoaW5ncyIsImxvY2F0ZUFsbCIsIkRyYWdJbnRlcmFjdGlvbiIsIm1hcCIsImVudCIsImRpc2Nvbm5lY3RlZENhbGxiYWNrIiwiZGVzdHJveSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUE7QUFDQTs7QUFFQSxNQUFNQSxRQUFOLFNBQXVCQyxXQUF2QixDQUFtQztBQUdqQ0MsYUFBVyxHQUFHO0FBQ1o7O0FBRFk7O0FBR1osU0FBS0MsTUFBTCxHQUFjQywrREFBUSxDQUFDLElBQUQsQ0FBUixDQUFlQyxZQUFmLEdBQThCQyxHQUE5QixDQUFrQyxJQUFsQyxDQUFkO0FBRUEsU0FBS0MsZ0JBQUwsQ0FBc0IsYUFBdEIsRUFBcUMsS0FBS0MsYUFBMUM7QUFDRDs7QUFFREEsZUFBYSxHQUFHO0FBQ2RDLFdBQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFaO0FBRUEsVUFBTUMsS0FBSyxHQUFHUCwrREFBUSxDQUFDLElBQUQsQ0FBdEI7QUFFQSxVQUFNUSxNQUFNLEdBQUdELEtBQUssQ0FBQ0UsU0FBTixDQUFnQkMsK0VBQWhCLENBQWY7QUFFQUwsV0FBTyxDQUFDQyxHQUFSLENBQVlFLE1BQVo7QUFFQUQsU0FBSyxDQUFDRSxTQUFOLENBQWdCQywrRUFBaEIsRUFBaUNDLEdBQWpDLENBQXNDQyxHQUFELElBQVM7QUFDNUNQLGFBQU8sQ0FBQ0MsR0FBUixDQUFZLGFBQVosRUFBMkJNLEdBQTNCO0FBQ0QsS0FGRDtBQUdEOztBQUVEQyxzQkFBb0IsR0FBRztBQUNyQixTQUFLZCxNQUFMLENBQVllLE9BQVo7QUFDQSxTQUFLQyxtQkFBTCxDQUF5QixhQUF6QixFQUF3QyxLQUFLWCxhQUE3QztBQUNEOztBQTVCZ0M7O0FBK0JwQlIsdUVBQWYiLCJmaWxlIjoiLi9zcmMvZG9tLWVsZW1lbnRzL0Ryb3Bab25lLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5IH0gZnJvbSBcIkBicm9jaGluZ3Rvbi9lY3N0YXRpY1wiO1xuaW1wb3J0IHsgQ29tcG9uZW50cyB9IGZyb20gXCJjb21wb25lbnRzXCI7XG5pbXBvcnQgRHJhZ0ludGVyYWN0aW9uIGZyb20gXCJjb21wb25lbnRzL2ludGVyYWN0aW9ucy9EcmFnSW50ZXJhY3Rpb25cIjtcbmltcG9ydCB7IGdldFdvcmxkIH0gZnJvbSBcInV0aWxzL2VsZW1lbnRzXCI7XG5cbmNsYXNzIERyb3Bab25lIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICBlbnRpdHk6IEVudGl0eTxDb21wb25lbnRzPjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5lbnRpdHkgPSBnZXRXb3JsZCh0aGlzKS5jcmVhdGVFbnRpdHkoKS5hZGQodGhpcyk7XG5cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJvdmVyJywgdGhpcy5vblBvaW50ZXJPdmVyKTtcbiAgfVxuXG4gIG9uUG9pbnRlck92ZXIoKSB7XG4gICAgY29uc29sZS5sb2coJ292ZXIgZHJvcCB6b25lIScpO1xuXG4gICAgY29uc3Qgd29ybGQgPSBnZXRXb3JsZCh0aGlzKTtcblxuICAgIGNvbnN0IHRoaW5ncyA9IHdvcmxkLmxvY2F0ZUFsbChEcmFnSW50ZXJhY3Rpb24pO1xuXG4gICAgY29uc29sZS5sb2codGhpbmdzKTtcblxuICAgIHdvcmxkLmxvY2F0ZUFsbChEcmFnSW50ZXJhY3Rpb24pLm1hcCgoZW50KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnZHJhZyBlbnRpdHknLCBlbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5lbnRpdHkuZGVzdHJveSgpO1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcigncG9pbnRlcm92ZXInLCB0aGlzLm9uUG9pbnRlck92ZXIpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERyb3Bab25lO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/dom-elements/DropZone.ts\n");

/***/ }),

/***/ "./src/dom-elements/index.ts":
/*!***********************************!*\
  !*** ./src/dom-elements/index.ts ***!
  \***********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DNDOverlord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DNDOverlord */ \"./src/dom-elements/DNDOverlord.ts\");\n/* harmony import */ var _DragWrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DragWrapper */ \"./src/dom-elements/DragWrapper.ts\");\n/* harmony import */ var _DragContent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DragContent */ \"./src/dom-elements/DragContent.ts\");\n/* harmony import */ var _DropZone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DropZone */ \"./src/dom-elements/DropZone.ts\");\n// Order here matters!\n\n\n // import './DraggingContent';\n// import './DraggingPlaceholder';\n\n\n/*\n  It's important to define the custom elements in the order\n  that they are nested in the HTML.\n\n  Also, defining them in the same file that declares the Class of\n  the component leaves you at the mercy of import order, and can\n  lead to weird errors.\n*/\n\ncustomElements.define(\"dnd-overlord\", _DNDOverlord__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\ncustomElements.define(\"drag-wrapper\", _DragWrapper__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\ncustomElements.define(\"drag-content\", _DragContent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]); // Drop related elements\n\ncustomElements.define(\"drop-zone\", _DropZone__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvZG9tLWVsZW1lbnRzL2luZGV4LnRzPzI5NDUiXSwibmFtZXMiOlsiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiLCJETkRPdmVybG9yZCIsIkRyYWdXcmFwcGVyIiwiRHJhZ0NvbnRlbnQiLCJEcm9wWm9uZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtDQUVBO0FBQ0E7O0FBRUE7QUFFQTs7Ozs7Ozs7O0FBU0FBLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixjQUF0QixFQUFzQ0Msb0RBQXRDO0FBQ0FGLGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixjQUF0QixFQUFzQ0Usb0RBQXRDO0FBQ0FILGNBQWMsQ0FBQ0MsTUFBZixDQUFzQixjQUF0QixFQUFzQ0csb0RBQXRDLEUsQ0FFQTs7QUFDQUosY0FBYyxDQUFDQyxNQUFmLENBQXNCLFdBQXRCLEVBQW1DSSxpREFBbkMiLCJmaWxlIjoiLi9zcmMvZG9tLWVsZW1lbnRzL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gT3JkZXIgaGVyZSBtYXR0ZXJzIVxuXG5pbXBvcnQgRE5ET3ZlcmxvcmQgZnJvbSAnLi9ETkRPdmVybG9yZCc7XG5pbXBvcnQgRHJhZ1dyYXBwZXIgZnJvbSAnLi9EcmFnV3JhcHBlcic7XG5pbXBvcnQgRHJhZ0NvbnRlbnQgZnJvbSAnLi9EcmFnQ29udGVudCc7XG4vLyBpbXBvcnQgJy4vRHJhZ2dpbmdDb250ZW50Jztcbi8vIGltcG9ydCAnLi9EcmFnZ2luZ1BsYWNlaG9sZGVyJztcblxuaW1wb3J0IERyb3Bab25lIGZyb20gJy4vRHJvcFpvbmUnO1xuXG4vKlxuICBJdCdzIGltcG9ydGFudCB0byBkZWZpbmUgdGhlIGN1c3RvbSBlbGVtZW50cyBpbiB0aGUgb3JkZXJcbiAgdGhhdCB0aGV5IGFyZSBuZXN0ZWQgaW4gdGhlIEhUTUwuXG5cbiAgQWxzbywgZGVmaW5pbmcgdGhlbSBpbiB0aGUgc2FtZSBmaWxlIHRoYXQgZGVjbGFyZXMgdGhlIENsYXNzIG9mXG4gIHRoZSBjb21wb25lbnQgbGVhdmVzIHlvdSBhdCB0aGUgbWVyY3kgb2YgaW1wb3J0IG9yZGVyLCBhbmQgY2FuXG4gIGxlYWQgdG8gd2VpcmQgZXJyb3JzLlxuKi9cblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwiZG5kLW92ZXJsb3JkXCIsIERORE92ZXJsb3JkKTtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZShcImRyYWctd3JhcHBlclwiLCBEcmFnV3JhcHBlcik7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoXCJkcmFnLWNvbnRlbnRcIiwgRHJhZ0NvbnRlbnQpO1xuXG4vLyBEcm9wIHJlbGF0ZWQgZWxlbWVudHNcbmN1c3RvbUVsZW1lbnRzLmRlZmluZShcImRyb3Atem9uZVwiLCBEcm9wWm9uZSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/dom-elements/index.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components */ \"./src/components/index.ts\");\n/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_components__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _dom_elements__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-elements */ \"./src/dom-elements/index.ts\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvaW5kZXgudHM/ZmZiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vc3JjL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2NvbXBvbmVudHMnO1xuaW1wb3J0ICcuL2RvbS1lbGVtZW50cyc7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/systems/dragElement.ts":
/*!************************************!*\
  !*** ./src/systems/dragElement.ts ***!
  \************************************/
/*! exports provided: dragElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dragElement\", function() { return dragElement; });\n/* harmony import */ var utils_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils/elements */ \"./src/utils/elements.ts\");\n/* harmony import */ var components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! components/interactions/DragInteraction */ \"./src/components/interactions/DragInteraction.ts\");\n/* harmony import */ var dom_elements_DragContent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dom-elements/DragContent */ \"./src/dom-elements/DragContent.ts\");\n\n\n\nfunction dragElement(args) {\n  const {\n    entity,\n    components\n  } = args;\n  const interaction = components.get(components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n  const element = components.get(dom_elements_DragContent__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n  const {\n    world,\n    systems\n  } = Object(utils_elements__WEBPACK_IMPORTED_MODULE_0__[\"getOverlord\"])(element);\n\n  if (!interaction.initialized) {\n    interaction.initialized = true;\n    const {\n      offsetX,\n      offsetY,\n      offsetLeft,\n      offsetTop\n    } = interaction; // element.style.position = 'absolute';\n\n    console.log(interaction);\n\n    const handleMove = evt => {\n      element.style.transform = `translate(${evt.x - offsetX - offsetLeft}px, ${evt.y - offsetY - offsetTop}px)`;\n      systems.run();\n    };\n\n    const handleUp = () => {\n      document.removeEventListener('pointermove', handleMove);\n      document.removeEventListener('pointerup', handleUp);\n      const maintainPosition = element.hasAttribute(\"maintain-position\");\n      console.log(\"maintainPosition\", maintainPosition);\n\n      if (!maintainPosition) {\n        element.style.transform = 'none';\n      }\n\n      entity.remove(components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    };\n\n    document.addEventListener('pointermove', handleMove);\n    document.addEventListener('pointerup', handleUp);\n  }\n}\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvc3lzdGVtcy9kcmFnRWxlbWVudC50cz83MTFlIl0sIm5hbWVzIjpbImRyYWdFbGVtZW50IiwiYXJncyIsImVudGl0eSIsImNvbXBvbmVudHMiLCJpbnRlcmFjdGlvbiIsImdldCIsIkRyYWdJbnRlcmFjdGlvbiIsImVsZW1lbnQiLCJEcmFnQ29udGVudCIsIndvcmxkIiwic3lzdGVtcyIsImdldE92ZXJsb3JkIiwiaW5pdGlhbGl6ZWQiLCJvZmZzZXRYIiwib2Zmc2V0WSIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJjb25zb2xlIiwibG9nIiwiaGFuZGxlTW92ZSIsImV2dCIsInN0eWxlIiwidHJhbnNmb3JtIiwieCIsInkiLCJydW4iLCJoYW5kbGVVcCIsImRvY3VtZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm1haW50YWluUG9zaXRpb24iLCJoYXNBdHRyaWJ1dGUiLCJyZW1vdmUiLCJhZGRFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiQUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBRU8sU0FBU0EsV0FBVCxDQUFxQkMsSUFBckIsRUFBNkM7QUFDbEQsUUFBTTtBQUFFQyxVQUFGO0FBQVVDO0FBQVYsTUFBeUJGLElBQS9CO0FBQ0EsUUFBTUcsV0FBVyxHQUFHRCxVQUFVLENBQUNFLEdBQVgsQ0FBZUMsK0VBQWYsQ0FBcEI7QUFDQSxRQUFNQyxPQUFPLEdBQUdKLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlRyxnRUFBZixDQUFoQjtBQUVBLFFBQU07QUFBRUMsU0FBRjtBQUFTQztBQUFULE1BQXFCQyxrRUFBVyxDQUFDSixPQUFELENBQXRDOztBQUVBLE1BQUksQ0FBQ0gsV0FBVyxDQUFDUSxXQUFqQixFQUE4QjtBQUM1QlIsZUFBVyxDQUFDUSxXQUFaLEdBQTBCLElBQTFCO0FBRUEsVUFBTTtBQUFFQyxhQUFGO0FBQVdDLGFBQVg7QUFBb0JDLGdCQUFwQjtBQUFnQ0M7QUFBaEMsUUFBOENaLFdBQXBELENBSDRCLENBSTVCOztBQUNBYSxXQUFPLENBQUNDLEdBQVIsQ0FBWWQsV0FBWjs7QUFDQSxVQUFNZSxVQUFVLEdBQUlDLEdBQUQsSUFBdUI7QUFDeENiLGFBQU8sQ0FBQ2MsS0FBUixDQUFjQyxTQUFkLEdBQ0csYUFBWUYsR0FBRyxDQUFDRyxDQUFKLEdBQVFWLE9BQVIsR0FBa0JFLFVBQVcsT0FBTUssR0FBRyxDQUFDSSxDQUFKLEdBQVFWLE9BQVIsR0FBa0JFLFNBQVUsS0FEOUU7QUFHQU4sYUFBTyxDQUFDZSxHQUFSO0FBQ0QsS0FMRDs7QUFPQSxVQUFNQyxRQUFRLEdBQUcsTUFBTTtBQUNyQkMsY0FBUSxDQUFDQyxtQkFBVCxDQUE2QixhQUE3QixFQUE0Q1QsVUFBNUM7QUFDQVEsY0FBUSxDQUFDQyxtQkFBVCxDQUE2QixXQUE3QixFQUEwQ0YsUUFBMUM7QUFFQSxZQUFNRyxnQkFBZ0IsR0FBR3RCLE9BQU8sQ0FBQ3VCLFlBQVIsQ0FBcUIsbUJBQXJCLENBQXpCO0FBQ0FiLGFBQU8sQ0FBQ0MsR0FBUixDQUFZLGtCQUFaLEVBQWdDVyxnQkFBaEM7O0FBQ0EsVUFBSSxDQUFDQSxnQkFBTCxFQUF1QjtBQUNyQnRCLGVBQU8sQ0FBQ2MsS0FBUixDQUFjQyxTQUFkLEdBQTBCLE1BQTFCO0FBQ0Q7O0FBRURwQixZQUFNLENBQUM2QixNQUFQLENBQWN6QiwrRUFBZDtBQUNELEtBWEQ7O0FBYUFxQixZQUFRLENBQUNLLGdCQUFULENBQTBCLGFBQTFCLEVBQXlDYixVQUF6QztBQUNBUSxZQUFRLENBQUNLLGdCQUFULENBQTBCLFdBQTFCLEVBQXVDTixRQUF2QztBQUNEO0FBQ0Y7QUFBQSIsImZpbGUiOiIuL3NyYy9zeXN0ZW1zL2RyYWdFbGVtZW50LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3lzdGVtQXJncyB9IGZyb20gJ3R5cGVzJztcbmltcG9ydCB7IGdldE92ZXJsb3JkIH0gZnJvbSAndXRpbHMvZWxlbWVudHMnO1xuaW1wb3J0IERyYWdJbnRlcmFjdGlvbiBmcm9tICdjb21wb25lbnRzL2ludGVyYWN0aW9ucy9EcmFnSW50ZXJhY3Rpb24nO1xuaW1wb3J0IERORE92ZXJsb3JkIGZyb20gJy4uL2RvbS1lbGVtZW50cy9ETkRPdmVybG9yZCc7XG5pbXBvcnQgRHJhZ0NvbnRlbnQgZnJvbSAnZG9tLWVsZW1lbnRzL0RyYWdDb250ZW50JztcblxuZXhwb3J0IGZ1bmN0aW9uIGRyYWdFbGVtZW50KGFyZ3M6IFN5c3RlbUFyZ3MpOiB2b2lkIHtcbiAgY29uc3QgeyBlbnRpdHksIGNvbXBvbmVudHMgfSA9IGFyZ3M7XG4gIGNvbnN0IGludGVyYWN0aW9uID0gY29tcG9uZW50cy5nZXQoRHJhZ0ludGVyYWN0aW9uKTtcbiAgY29uc3QgZWxlbWVudCA9IGNvbXBvbmVudHMuZ2V0KERyYWdDb250ZW50KTtcblxuICBjb25zdCB7IHdvcmxkLCBzeXN0ZW1zIH0gPSBnZXRPdmVybG9yZChlbGVtZW50KTtcblxuICBpZiAoIWludGVyYWN0aW9uLmluaXRpYWxpemVkKSB7XG4gICAgaW50ZXJhY3Rpb24uaW5pdGlhbGl6ZWQgPSB0cnVlO1xuXG4gICAgY29uc3QgeyBvZmZzZXRYLCBvZmZzZXRZLCBvZmZzZXRMZWZ0LCBvZmZzZXRUb3AgfSA9IGludGVyYWN0aW9uO1xuICAgIC8vIGVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICAgIGNvbnNvbGUubG9nKGludGVyYWN0aW9uKTtcbiAgICBjb25zdCBoYW5kbGVNb3ZlID0gKGV2dDogUG9pbnRlckV2ZW50KSA9PiB7XG4gICAgICBlbGVtZW50LnN0eWxlLnRyYW5zZm9ybSA9XG4gICAgICAgIGB0cmFuc2xhdGUoJHtldnQueCAtIG9mZnNldFggLSBvZmZzZXRMZWZ0fXB4LCAke2V2dC55IC0gb2Zmc2V0WSAtIG9mZnNldFRvcH1weClgO1xuXG4gICAgICBzeXN0ZW1zLnJ1bigpO1xuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZVVwID0gKCkgPT4ge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigncG9pbnRlcm1vdmUnLCBoYW5kbGVNb3ZlKTtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJ1cCcsIGhhbmRsZVVwKTtcblxuICAgICAgY29uc3QgbWFpbnRhaW5Qb3NpdGlvbiA9IGVsZW1lbnQuaGFzQXR0cmlidXRlKFwibWFpbnRhaW4tcG9zaXRpb25cIik7XG4gICAgICBjb25zb2xlLmxvZyhcIm1haW50YWluUG9zaXRpb25cIiwgbWFpbnRhaW5Qb3NpdGlvbik7XG4gICAgICBpZiAoIW1haW50YWluUG9zaXRpb24pIHtcbiAgICAgICAgZWxlbWVudC5zdHlsZS50cmFuc2Zvcm0gPSAnbm9uZSc7XG4gICAgICB9XG5cbiAgICAgIGVudGl0eS5yZW1vdmUoRHJhZ0ludGVyYWN0aW9uKTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVybW92ZScsIGhhbmRsZU1vdmUpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJ1cCcsIGhhbmRsZVVwKVxuICB9XG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/systems/dragElement.ts\n");

/***/ }),

/***/ "./src/systems/index.ts":
/*!******************************!*\
  !*** ./src/systems/index.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var lodash_noop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/noop */ \"./node_modules/lodash/noop.js\");\n/* harmony import */ var lodash_noop__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_noop__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var systems_dragElement__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! systems/dragElement */ \"./src/systems/dragElement.ts\");\n/* harmony import */ var components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! components/interactions/DragInteraction */ \"./src/components/interactions/DragInteraction.ts\");\n/* harmony import */ var dom_elements_DragContent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dom-elements/DragContent */ \"./src/dom-elements/DragContent.ts\");\n/* harmony import */ var dom_elements_DragWrapper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dom-elements/DragWrapper */ \"./src/dom-elements/DragWrapper.ts\");\n/* harmony import */ var dom_elements_DNDOverlord__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dom-elements/DNDOverlord */ \"./src/dom-elements/DNDOverlord.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nconst totalAddAttemptsAllowed = 20;\n\nclass Systems {\n  constructor(world) {\n    _defineProperty(this, \"dragElement\", lodash_noop__WEBPACK_IMPORTED_MODULE_0___default.a);\n\n    _defineProperty(this, \"addAttempts\", 0);\n\n    this.addSystems(world);\n  }\n\n  addSystems(world) {\n    const allComps = [dom_elements_DragWrapper__WEBPACK_IMPORTED_MODULE_4__[\"default\"], dom_elements_DragContent__WEBPACK_IMPORTED_MODULE_3__[\"default\"], components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_2__[\"default\"], dom_elements_DNDOverlord__WEBPACK_IMPORTED_MODULE_5__[\"default\"]];\n\n    if (allComps.every(c => !!c)) {\n      this.dragElement = world.createSystem([dom_elements_DragWrapper__WEBPACK_IMPORTED_MODULE_4__[\"default\"], dom_elements_DragContent__WEBPACK_IMPORTED_MODULE_3__[\"default\"], components_interactions_DragInteraction__WEBPACK_IMPORTED_MODULE_2__[\"default\"]], systems_dragElement__WEBPACK_IMPORTED_MODULE_1__[\"dragElement\"]);\n      return;\n    }\n\n    this.addAttempts += 1;\n\n    if (this.addAttempts < totalAddAttemptsAllowed) {\n      window.requestAnimationFrame(() => this.addSystems(world));\n    } else {\n      throw new Error(\"Unable to load Sytems\");\n    }\n  }\n\n  run() {\n    this.dragElement(); // run whatever systems here.\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Systems);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvc3lzdGVtcy9pbmRleC50cz81MDJmIl0sIm5hbWVzIjpbInRvdGFsQWRkQXR0ZW1wdHNBbGxvd2VkIiwiU3lzdGVtcyIsImNvbnN0cnVjdG9yIiwid29ybGQiLCJub29wIiwiYWRkU3lzdGVtcyIsImFsbENvbXBzIiwiRHJhZ1dyYXBwZXIiLCJEcmFnQ29udGVudCIsIkRyYWdJbnRlcmFjdGlvbiIsIkRORE92ZXJsb3JkIiwiZXZlcnkiLCJjIiwiZHJhZ0VsZW1lbnQiLCJjcmVhdGVTeXN0ZW0iLCJhZGRBdHRlbXB0cyIsIndpbmRvdyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIkVycm9yIiwicnVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsTUFBTUEsdUJBQXVCLEdBQUcsRUFBaEM7O0FBRUEsTUFBTUMsT0FBTixDQUFjO0FBS1pDLGFBQVcsQ0FBQ0MsS0FBRCxFQUEyQjtBQUFBLHlDQUpoQkMsa0RBSWdCOztBQUFBLHlDQUZ4QixDQUV3Qjs7QUFDcEMsU0FBS0MsVUFBTCxDQUFnQkYsS0FBaEI7QUFDRDs7QUFFREUsWUFBVSxDQUFDRixLQUFELEVBQTJCO0FBQ25DLFVBQU1HLFFBQVEsR0FBRyxDQUFDQyxnRUFBRCxFQUFjQyxnRUFBZCxFQUEyQkMsK0VBQTNCLEVBQTRDQyxnRUFBNUMsQ0FBakI7O0FBRUEsUUFBSUosUUFBUSxDQUFDSyxLQUFULENBQWdCQyxDQUFELElBQU8sQ0FBQyxDQUFDQSxDQUF4QixDQUFKLEVBQWdDO0FBQzlCLFdBQUtDLFdBQUwsR0FBbUJWLEtBQUssQ0FBQ1csWUFBTixDQUNqQixDQUFDUCxnRUFBRCxFQUFjQyxnRUFBZCxFQUEyQkMsK0VBQTNCLENBRGlCLEVBRWpCSSwrREFGaUIsQ0FBbkI7QUFLQTtBQUNEOztBQUVELFNBQUtFLFdBQUwsSUFBb0IsQ0FBcEI7O0FBRUEsUUFBSSxLQUFLQSxXQUFMLEdBQW1CZix1QkFBdkIsRUFBZ0Q7QUFDOUNnQixZQUFNLENBQUNDLHFCQUFQLENBQTZCLE1BQU0sS0FBS1osVUFBTCxDQUFnQkYsS0FBaEIsQ0FBbkM7QUFDRCxLQUZELE1BRU87QUFDTCxZQUFNLElBQUllLEtBQUosQ0FBVSx1QkFBVixDQUFOO0FBQ0Q7QUFDRjs7QUFFREMsS0FBRyxHQUFHO0FBQ0osU0FBS04sV0FBTCxHQURJLENBRUo7QUFDRDs7QUFqQ1c7O0FBb0NDWixzRUFBZiIsImZpbGUiOiIuL3NyYy9zeXN0ZW1zL2luZGV4LnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV29ybGQsIFN5c3RlbSwgY3JlYXRlU3lzdGVtLCBDb21wVHlwZXMgfSBmcm9tIFwiQGJyb2NoaW5ndG9uL2Vjc3RhdGljXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwibG9kYXNoL25vb3BcIjtcbmltcG9ydCB7IENvbXBvbmVudHMgfSBmcm9tIFwiY29tcG9uZW50c1wiO1xuXG5pbXBvcnQgeyBkcmFnRWxlbWVudCB9IGZyb20gXCJzeXN0ZW1zL2RyYWdFbGVtZW50XCI7XG5pbXBvcnQgRHJhZ0ludGVyYWN0aW9uIGZyb20gXCJjb21wb25lbnRzL2ludGVyYWN0aW9ucy9EcmFnSW50ZXJhY3Rpb25cIjtcbmltcG9ydCBEcmFnQ29udGVudCBmcm9tICdkb20tZWxlbWVudHMvRHJhZ0NvbnRlbnQnO1xuaW1wb3J0IERyYWdXcmFwcGVyIGZyb20gJ2RvbS1lbGVtZW50cy9EcmFnV3JhcHBlcic7XG5pbXBvcnQgRE5ET3ZlcmxvcmQgZnJvbSBcImRvbS1lbGVtZW50cy9ETkRPdmVybG9yZFwiO1xuXG5jb25zdCB0b3RhbEFkZEF0dGVtcHRzQWxsb3dlZCA9IDIwO1xuXG5jbGFzcyBTeXN0ZW1zIHtcbiAgZHJhZ0VsZW1lbnQ6IFN5c3RlbSA9IG5vb3A7XG5cbiAgYWRkQXR0ZW1wdHMgPSAwO1xuXG4gIGNvbnN0cnVjdG9yKHdvcmxkOiBXb3JsZDxDb21wb25lbnRzPikge1xuICAgIHRoaXMuYWRkU3lzdGVtcyh3b3JsZCk7XG4gIH1cblxuICBhZGRTeXN0ZW1zKHdvcmxkOiBXb3JsZDxDb21wb25lbnRzPikge1xuICAgIGNvbnN0IGFsbENvbXBzID0gW0RyYWdXcmFwcGVyLCBEcmFnQ29udGVudCwgRHJhZ0ludGVyYWN0aW9uLCBETkRPdmVybG9yZF07XG5cbiAgICBpZiAoYWxsQ29tcHMuZXZlcnkoKGMpID0+ICEhYykpIHtcbiAgICAgIHRoaXMuZHJhZ0VsZW1lbnQgPSB3b3JsZC5jcmVhdGVTeXN0ZW0oXG4gICAgICAgIFtEcmFnV3JhcHBlciwgRHJhZ0NvbnRlbnQsIERyYWdJbnRlcmFjdGlvbl0sXG4gICAgICAgIGRyYWdFbGVtZW50XG4gICAgICApO1xuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5hZGRBdHRlbXB0cyArPSAxO1xuXG4gICAgaWYgKHRoaXMuYWRkQXR0ZW1wdHMgPCB0b3RhbEFkZEF0dGVtcHRzQWxsb3dlZCkge1xuICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB0aGlzLmFkZFN5c3RlbXMod29ybGQpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIGxvYWQgU3l0ZW1zXCIpO1xuICAgIH1cbiAgfVxuXG4gIHJ1bigpIHtcbiAgICB0aGlzLmRyYWdFbGVtZW50KCk7XG4gICAgLy8gcnVuIHdoYXRldmVyIHN5c3RlbXMgaGVyZS5cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTeXN0ZW1zO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/systems/index.ts\n");

/***/ }),

/***/ "./src/utils/elements.ts":
/*!*******************************!*\
  !*** ./src/utils/elements.ts ***!
  \*******************************/
/*! exports provided: getOverlord, getWorld, getSystems */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOverlord\", function() { return getOverlord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getWorld\", function() { return getWorld; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSystems\", function() { return getSystems; });\n/* harmony import */ var dom_elements_DNDOverlord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dom-elements/DNDOverlord */ \"./src/dom-elements/DNDOverlord.ts\");\n\nfunction getOverlord(el) {\n  const overlord = el.closest(\"dnd-overlord\");\n  return overlord || new dom_elements_DNDOverlord__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n}\nfunction getWorld(el) {\n  return getOverlord(el).world;\n}\nfunction getSystems(el) {\n  return getOverlord(el).systems;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kbmQtd2ViLWNvbXBvbmVudHMvLi9zcmMvdXRpbHMvZWxlbWVudHMudHM/MzNlYSJdLCJuYW1lcyI6WyJnZXRPdmVybG9yZCIsImVsIiwib3ZlcmxvcmQiLCJjbG9zZXN0IiwiRE5ET3ZlcmxvcmQiLCJnZXRXb3JsZCIsIndvcmxkIiwiZ2V0U3lzdGVtcyIsInN5c3RlbXMiXSwibWFwcGluZ3MiOiJBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUlPLFNBQVNBLFdBQVQsQ0FBcUJDLEVBQXJCLEVBQW1EO0FBQ3hELFFBQU1DLFFBQVEsR0FBR0QsRUFBRSxDQUFDRSxPQUFILENBQXdCLGNBQXhCLENBQWpCO0FBRUEsU0FBT0QsUUFBUSxJQUFJLElBQUlFLGdFQUFKLEVBQW5CO0FBQ0Q7QUFFTSxTQUFTQyxRQUFULENBQWtCSixFQUFsQixFQUFzRDtBQUMzRCxTQUFPRCxXQUFXLENBQUNDLEVBQUQsQ0FBWCxDQUFnQkssS0FBdkI7QUFDRDtBQUVNLFNBQVNDLFVBQVQsQ0FBb0JOLEVBQXBCLEVBQThDO0FBQ25ELFNBQU9ELFdBQVcsQ0FBQ0MsRUFBRCxDQUFYLENBQWdCTyxPQUF2QjtBQUNEIiwiZmlsZSI6Ii4vc3JjL3V0aWxzL2VsZW1lbnRzLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV29ybGQgfSBmcm9tIFwiQGJyb2NoaW5ndG9uL2Vjc3RhdGljXCI7XG5pbXBvcnQgRE5ET3ZlcmxvcmQgZnJvbSBcImRvbS1lbGVtZW50cy9ETkRPdmVybG9yZFwiO1xuaW1wb3J0IHsgQ29tcG9uZW50cyB9IGZyb20gXCJjb21wb25lbnRzXCI7XG5pbXBvcnQgU3lzdGVtcyBmcm9tICdzeXN0ZW1zJztcblxuZXhwb3J0IGZ1bmN0aW9uIGdldE92ZXJsb3JkKGVsOiBIVE1MRWxlbWVudCk6IERORE92ZXJsb3JkIHtcbiAgY29uc3Qgb3ZlcmxvcmQgPSBlbC5jbG9zZXN0PERORE92ZXJsb3JkPihcImRuZC1vdmVybG9yZFwiKTtcblxuICByZXR1cm4gb3ZlcmxvcmQgfHwgbmV3IERORE92ZXJsb3JkKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRXb3JsZChlbDogSFRNTEVsZW1lbnQpOiBXb3JsZDxDb21wb25lbnRzPiB7XG4gIHJldHVybiBnZXRPdmVybG9yZChlbCkud29ybGQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTeXN0ZW1zKGVsOiBIVE1MRWxlbWVudCk6IFN5c3RlbXMge1xuICByZXR1cm4gZ2V0T3ZlcmxvcmQoZWwpLnN5c3RlbXM7XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/elements.ts\n");

/***/ }),

/***/ 0:
/*!****************************!*\
  !*** multi ./src/index.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /Users/brochstilley/repos/dnd-web-components/src/index.ts */"./src/index.ts");


/***/ })

/******/ });
});